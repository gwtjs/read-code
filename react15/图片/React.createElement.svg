<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1341px" height="941px" viewBox="-0.5 -0.5 1341 941" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-13T09:43:56.004Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot; etag=&quot;SUtFZgm4e9W6QwHdMBgd&quot; version=&quot;14.1.8&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;feYCaBUQdYRIUxlk5dTh&quot; name=&quot;第 1 页&quot;&gt;7R3Jcts29Ft60NQ5yCNSi62jF6U9JI3HzrTNyQORkIQWJBQQsqV+fQESFEmBq8zV5liTkNjfioeHR2AwvrP2v1Gw3XwlJsQDfWTuB+P7ga5rE10fiN/IPMiU+VjzUtYUmTItSHhC/0GZOJKpO2RCJ1KQEYIZ2kYTDWLb0GCRNEApeY0WWxEc7XUL1lBJeDIAVlP/QibbeKnX+lWQ/jtE643fszabezkW8AtLSJwNMMlrKGm8GIzvKCHMe7L2dxAL7Pl48ep9Tsg9DoxCm+Wp8OPw58/d/Per+zm4fdBfLLaeGENJnheAdxLggT7DvL1bIuoaGDgeAmc/d2Kgt8YGYZN3yTPhfgtsE5pBpoCSHSTq/MQl2Q8d9B+y14PxDS+xJNSEdMiT+YtXyUL28NXDrigx2kazNhLBp3kYOWzodjhkhy30CtjEhscSW2CavOMhhitZX9NDDRgEE+ql0/XyYjwWOfod/zfy+OlYYUVsNlwBC+GDV42DCaytmzkeTwR+iO0QjjUl49iekoN3BjKBx8O8LixQ1SA7iiAVYMPX5HoWsYmzBQYMk2q2lv+75MaoBuJps1Amg3s2JC+QrrAQC5HPGZbLNXIC+hEHMURsSSOIAUMvAXlN5GwxkKRYYRg0DjBa20PEoOV4uQaXEoGoJPg5euxYhreBBYecz4eejDTF61FEbZBpujKYH5UY2TCGGEn4+Aji30tzL829NPfS3EtzL81dkuZUfDSGhRNjWhvPjjyuzYPHyfRTHGQT/hNyT1Y+lHwl4wEqi4iWpRDZS2ebBx9k+Q9fE3rcMXQO1tLVg80yyyma5gGa9NCjHoOlJxeCCwqBwS4hhhaXm09J6MpMFlql1zO9nvlIeuZfeKhKvdg73DrlMp8c8RF5jMGMN/xyVYmKMemtqhM9vb7p9U1j+mZLydapSuN4L83pHIWMV/x339sjvX7o9UNO/UBhZcud3h7p7ZFe3/T6JgKZ61mtSOGsdrbh8mnTSsd1BMsORR5iXBKMM8gcC95wy5U22reH/EeSjwOVql2N4rxsd7PBXE+i8gk/3Gy3F6752nuYeg3ba9i8GvaZvNouB/RGXdNG3ciBmKPuZE+TgSWyTbiPVBlqzdmAZMdcqUmo2yuwDiuwkZReMZFCyhB0hg70zAgTWVaD2+1FdJyP2y0wEJNsNLqcxSi/Zw4oI8/PVem/trm8vsnxlKbSeKLYo2xPA3oEtfqGWZg/acc8Lk0M+uG+akiqdgx0tfa/QWJBRg+8iKygj6deFRkdPLmWsbKvQaitPpFpPjHcZmcyEcjw3vWx7SAClj/IINgCAbGTxIBYyaExfAaMf9eU7LjyOw0o1Y6SFHmM3QHP6OVUYKfhzeJR8DydVByuWjyuJbIucyO8XcU6iZOoR7G5ncC3l5lI6gDA8fo3QsLQc/xCzqAQMLjwIgAyhDwvQ+maHowg+txphro4Fz8dgDVhLk9VDaf44ev8d4yhJDUrCgeYuw8XHJsT8RdX9y6EKa+FXPNslxEYz2LXIWsxzG3amau+j66kCvvYks2yFcL47sjWY20l/sox1zR9FDHXhr5pFjbXrmLMtWlV1po2V1ABzTV8kq+Esg1ZExvgRZB665pqUDQrSBSU+ULIViLxH8jYQX6MBnaM8KQQiuEesb9ldfH8QzxfTuXb/T6UdX+QL944xeDSkc9h4ZxmwDSg/e/gAF1DllbwOp6cRwdB5GO50mmjJZrSJnopTdpTrO9g6os8dkpTJLol5mnTWxKC2wVwD5QEqvhkyAcyN0xjFfPVgLuCSl8bZC+kol2ZvCsAzl6HRB0+bjdpPqCs0UxnHPQY71OwAZlrIBcl4TttT9W1GN8Ca1KnnKNXaF1/t8cPhmI7/qR0exU2YWJ4PZp0OuQquOQFJO7OVIMz4fv9w9vOiveJZqBoSetD2gzM59NpnLb67P6ijT9CB9IX14kdSRe+b+c0kRs6p0lwzyiQGzQZ1u/HZZ3E8NEcetULyGwTg7UGtSlfAtQ2YaUtjHvuTwuO7EnUDhI5EPc0ajuNPH9Cl6lU5wxlTK9nxkgdP8rL6GWtKzJM/GinvzRCuKrt/TLp2oZZ5ixSF12slwOo96uGo4T7dYXsNLv/ZDzK0qMGpaQMIit2pavUL3eOrENm6zTeG6VaMUB7mS1dZg04166u1UH8+mveIehVCUHTDNg9tVHraqVRsj0/F4S1Vx3va7pPZ4AOim69i9imaVcU2l583534prJAewW46A6SBZAtIvRPMoIPJk5zYvaRgGmqm1CMKMVOE8I7+6F+lS5Jzij/VhEiyY+1Inn9j2U5srI2QKtRFihvHEAdeqFpR9nHc5AW1cRJIS4b4Hx7tR88dZS0FqpJUlQu8t/96KT416OPuJxRPi6eFo9/Lu6fHx6/PTx9JPy3XYzrsMRTYxKmZfaSNmdMVWu3GaO/VpDrtTbS3yMnfVU8ljL7ymqrveFWd0HwXSTdAErSUrGRLaLazWyj1nQP3D61uNc7L8BTCSsEtmp3b4gT04TaOQW2s4KUqqY7sV3jvWpruzpKsY0CLl9r4IOCFoyJAZiKgZRlyGXLMNOaOAc/NvULtNdsk7fvytwmvtQkzZVluQpwEXCHbwR2OTUgiNkO0ZP6b44v27NMOZcvy3DqJRFMSxhH0xZu1RZqWVKXEQhfvpo5dyBlCuDVW4FIkkmInYq8Qx3XAv57Gah4z6qgXUbIDaWgvgCVCTTmyxgWTxtFrVz9qVQl1HUveWtYFdXGoUmaZ5Q6aTUKs/+Oq9YVmVNCA7gQv6a1fx2GYrayLs25l4jsKhyZ5y5JawBXAawqqyZxRVqzG7VON2m/fKpABZTJLN31PT9Ch+AXxatpwhXYYXaanPHd6sf2B6WeF/CW/d3qx1eW+Eu2eUhhk6btj06a9DnwWp9qbQcflaxxur32/NgRWh3QOu9ywmtzxEiTgdNtZ7amFxtN80Zzc3QfU9SthXm54y5DyVPIdrSi+TUpVDPHwXOdPnMt7WPcqvpM+2i/qj5TPx2srNP0T56q6tbl2bsdFaewfku5uac0x5fXVe1wps2zxfbnzjpQLL5cvtTiRx27t9rwNAxXQRNvOvn4ShtFTz4+HmkcOvp4Nh+pRx/P/TOSyz9fd9bWqyradSBrZSfn55jvikjvez7f/PJc/HQA1nhW6i/06C/0aEYt9Rd6RGAa9Bd65GCx/kKPctmyxAs9hOGKDIBvpFW7JIwRS+CYAcpuKBV3Gd4biBqispf6GeHjZRW26ZchW2j7JeTlFjOvhHy7HgSXW/gXXeS53IJPWvTwd/jFq6VP/fegnvtWwa0Yk7yXYiRY+iFD3r+FLvc9GbK1B4JcJSQXDZOTRYN2NY024cEkawWrAaWh6eikIX+AfkMe0EpD7rLiCOL5Kw191OgtK0fm+xHKqf6WleucDKU3esnKdX/JSqOXrBSf9toUMJBvCVtTeOJHur+j9yVX2WkzvuTUm98b8uxWu8PcSZ0H36zu2huJViyo8/sGKR+ZM6CcxSW+UlcOytqpNZUDt3Y2+rmD6mfvyOT4RyslncWMB6gppwn+lcGRxHy+tLbRL4lnBzpf3kzETEVSondK6UkUqNUEWdzcfX9efFl8Xfzx/fn7j4dFqgottO3UFUG83SHMhm48XCQ9+RQ8tgEKyy8hJupJekRpNeZ0ikyd2ClpSY+w7qSUZBqpnSJQ6rHmnaRPlj3fKfKk3hTRSfJkLX06RZ48X9d0jUDpML3bif8RGoSaOSZog1hbYntTdCSDQodnOGiJlTredwTRZsQ+c8xxu3GWt7QJsrbuuyI1z+nL826KTR6YSglvLZfeRUBvIsL1TNdBESTlwGkbA+Fm0Z0o/zW0eTaNi4Ib+1tIBTZA+CslAv3BVhYF281XYkJR4n8=&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FReact.createElement.svg"><defs/><g><rect x="175" y="730" width="240" height="160" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 810px; margin-left: 295px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; color: rgb(33 , 33 , 33) ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">$$typeof</span>: <span class="object-value-symbol value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(196 , 26 , 22)">Symbol(react.element)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">key</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">props</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">{}</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">ref</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">type</span>: <span class="object-value-function value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; font-style: italic"><span class="object-value-function-prefix" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(13 , 34 , 170)">ƒ </span>App(props)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">_owner</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent selected" tabindex="-1" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; outline-width: 0px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name object-properties-section-dimmed" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145) ; opacity: 0.6">__proto__</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">Object</span></span></li></ol></span></li></ol></span></li></ol></div></div></div></foreignObject><text x="295" y="814" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">$$typeof: Symbol(react.element)key: null...</text></switch></g><rect x="60" y="210" width="270" height="50" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 235px; margin-left: 195px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><span style="background-color: rgb(31 , 31 , 31)"><span style="color: rgb(156 , 220 , 254) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">React</span>.<span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(220 , 220 , 170)">createElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">(</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">App</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px"><font color="#d4d4d4">,</font></span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(86 , 156 , 214)">null</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">)</span></span></div></div></div></foreignObject><text x="195" y="239" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">React.createElement(App,null)</text></switch></g><path d="M 650 470 L 596.37 470" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 591.12 470 L 598.12 466.5 L 596.37 470 L 598.12 473.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="650" y="0" width="690" height="940" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 470px; margin-left: 652px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #9cdcfe">ReactElement</span>.<span style="color: #dcdcaa">createElement</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">config</span>, <span style="color: #9cdcfe">children</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">propName</span>;</div><br /><div>  <span style="color: #6a9955">// Reserved names are extracted</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">props</span> = {};</div><br /><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">key</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">ref</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">self</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">source</span> = <span style="color: #569cd6">null</span>;</div><br /><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span> != <span style="color: #569cd6">null</span>) {</div><div>    <span style="color: #9cdcfe">ref</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span>;</div><div>    <span style="color: #9cdcfe">key</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #ce9178">''</span> + <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span>;</div><div>    <span style="color: #9cdcfe">self</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span>;</div><div>    <span style="color: #9cdcfe">source</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span>;</div><div>    <span style="color: #6a9955">// Remaining properties are added to a new props object</span></div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">config</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>) &amp;&amp; !<span style="color: #9cdcfe">RESERVED_PROPS</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>)) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">config</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Children can be more than one argument, and those are transferred onto</span></div><div>  <span style="color: #6a9955">// the newly allocated props object.</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childrenLength</span> = <span style="color: #569cd6">arguments</span>.<span style="color: #9cdcfe">length</span> - <span style="color: #b5cea8">2</span>;</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> === <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">children</span>;</div><div>  } <span style="color: #c586c0">else</span> <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> &gt; <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childArray</span> = <span style="color: #4ec9b0">Array</span>(<span style="color: #9cdcfe">childrenLength</span>);</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">childrenLength</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>      <span style="color: #9cdcfe">childArray</span>[<span style="color: #9cdcfe">i</span>] = <span style="color: #569cd6">arguments</span>[<span style="color: #9cdcfe">i</span> + <span style="color: #b5cea8">2</span>];</div><div>    }</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">childArray</span>;</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Resolve default props</span></div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">type</span> &amp;&amp; <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">defaultProps</span> = <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>;</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">defaultProps</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] === <span style="color: #569cd6">undefined</span>) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">defaultProps</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #dcdcaa">ReactElement</span>(<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">ReactCurrentOwner</span>.<span style="color: #9cdcfe">current</span>, <span style="color: #9cdcfe">props</span>);</div><div>};</div><br /></div></div></div></div></div></div></foreignObject><text x="652" y="474" fill="#000000" font-family="Helvetica" font-size="12px">ReactElement.createElement = function (type, config, children) {...</text></switch></g><path d="M 345 235 L 647.76 235" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><ellipse cx="338" cy="235" rx="7" ry="7" fill="#000000" stroke="#000000" pointer-events="all"/><path d="M 639.88 239.5 L 648.88 235 L 639.88 230.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 232px; margin-left: 490px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; "><span style="background-color: rgb(31 , 31 , 31)"><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">ReactElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">.</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(220 , 220 , 170)">createElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">(</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">App</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px"><font color="#d4d4d4">,</font></span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(86 , 156 , 214)">null</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">)</span></span></div></div></div></foreignObject><text x="490" y="232" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">ReactElement.cr...</text></switch></g><path d="M 295 630 L 295 723.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 295 728.88 L 291.5 721.88 L 295 723.63 L 298.5 721.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="310" width="590" height="320" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 470px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">ReactElement</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">owner</span>, <span style="color: #9cdcfe">props</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">element</span> = {</div><div>    <span style="color: #6a9955">// This tag allow us to uniquely identify this as a React Element</span></div><div>    <span style="color: #9cdcfe">$$typeof</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">REACT_ELEMENT_TYPE</span>,</div><br /><div>    <span style="color: #6a9955">// Built-in properties that belong on the element</span></div><div>    <span style="color: #9cdcfe">type</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">type</span>,</div><div>    <span style="color: #9cdcfe">key</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">key</span>,</div><div>    <span style="color: #9cdcfe">ref</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">ref</span>,</div><div>    <span style="color: #9cdcfe">props</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">props</span>,</div><br /><div>    <span style="color: #6a9955">// Record the component responsible for creating this element.</span></div><div>    <span style="color: #9cdcfe">_owner</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">owner</span></div><div>  };</div><div>  <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">element</span>;</div><div>};</div></div></div></div></div></foreignObject><text x="2" y="474" fill="#000000" font-family="Helvetica" font-size="12px">var ReactElement = function (type, key, ref, self, source, owner, props) {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>