<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1368px" height="931px" viewBox="-0.5 -0.5 1368 931" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-13T09:23:30.905Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot; etag=&quot;8wg-EYxsY3PKJdXr0suq&quot; version=&quot;14.1.8&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;feYCaBUQdYRIUxlk5dTh&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FReact.createElement.svg"><defs/><g><rect x="193" y="655" width="240" height="160" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 735px; margin-left: 313px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; color: rgb(33 , 33 , 33) ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">$$typeof</span>: <span class="object-value-symbol value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(196 , 26 , 22)">Symbol(react.element)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">key</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">props</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">{}</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">ref</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">type</span>: <span class="object-value-function value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; font-style: italic"><span class="object-value-function-prefix" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(13 , 34 , 170)">ƒ </span>App(props)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">_owner</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent selected" tabindex="-1" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; outline-width: 0px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">_store</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">{<span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(86 , 86 , 86)">validated</span>: <span class="object-value-boolean" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(13 , 34 , 170)">false</span>}</span></span></li></ol></div></div></div></foreignObject><text x="313" y="739" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">$$typeof: Symbol(react.element)key: null...</text></switch></g><path d="M 313 395 L 313 448.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 313 453.88 L 309.5 446.88 L 313 448.63 L 316.5 446.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="178" y="345" width="270" height="50" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 370px; margin-left: 313px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><span style="background-color: rgb(31 , 31 , 31)"><span style="color: rgb(156 , 220 , 254) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">React</span>.<span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(220 , 220 , 170)">createElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">(</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">App</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px"><font color="#d4d4d4">,</font></span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(86 , 156 , 214)">null</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">)</span></span></div></div></div></foreignObject><text x="313" y="374" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">React.createElement(App,null)</text></switch></g><path d="M 313 505 L 313 538.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 313 543.88 L 309.5 536.88 L 313 538.63 L 316.5 536.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="113" y="455" width="400" height="50" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 480px; margin-left: 313px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><span style="color: #9cdcfe">ReactElement</span>.<span style="color: #dcdcaa">createElement</span>(<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">config</span>, <span style="color: #9cdcfe">children</span>)</div></div></div></div></foreignObject><text x="313" y="484" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">ReactElement.createElement(type, config, children)</text></switch></g><path d="M 313 605 L 313 648.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 313 653.88 L 309.5 646.88 L 313 648.63 L 316.5 646.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="545" width="626" height="60" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 575px; margin-left: 313px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><span style="color: #dcdcaa">ReactElement</span>(<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">ReactCurrentOwner</span>.<span style="color: #9cdcfe">current</span>, <span style="color: #9cdcfe">props</span>)</div></div></div></div></div></foreignObject><text x="313" y="579" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props)</text></switch></g><path d="M 688 465 L 657 465 L 657 575 L 632.37 575" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 627.12 575 L 634.12 571.5 L 632.37 575 L 634.12 578.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="688" y="435" width="626" height="60" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 465px; margin-left: 690px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #9cdcfe">ReactElement</span>.<span style="color: #dcdcaa">createElement</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">config</span>, <span style="color: #9cdcfe">children</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">propName</span>;</div><br /><div>  <span style="color: #6a9955">// Reserved names are extracted</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">props</span> = {};</div><br /><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">key</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">ref</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">self</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">source</span> = <span style="color: #569cd6">null</span>;</div><br /><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span> != <span style="color: #569cd6">null</span>) {</div><div>    <span style="color: #9cdcfe">ref</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span>;</div><div>    <span style="color: #9cdcfe">key</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #ce9178">''</span> + <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span>;</div><div>    <span style="color: #9cdcfe">self</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span>;</div><div>    <span style="color: #9cdcfe">source</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span>;</div><div>    <span style="color: #6a9955">// Remaining properties are added to a new props object</span></div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">config</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>) &amp;&amp; !<span style="color: #9cdcfe">RESERVED_PROPS</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>)) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">config</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Children can be more than one argument, and those are transferred onto</span></div><div>  <span style="color: #6a9955">// the newly allocated props object.</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childrenLength</span> = <span style="color: #569cd6">arguments</span>.<span style="color: #9cdcfe">length</span> - <span style="color: #b5cea8">2</span>;</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> === <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">children</span>;</div><div>  } <span style="color: #c586c0">else</span> <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> &gt; <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childArray</span> = <span style="color: #4ec9b0">Array</span>(<span style="color: #9cdcfe">childrenLength</span>);</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">childrenLength</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>      <span style="color: #9cdcfe">childArray</span>[<span style="color: #9cdcfe">i</span>] = <span style="color: #569cd6">arguments</span>[<span style="color: #9cdcfe">i</span> + <span style="color: #b5cea8">2</span>];</div><div>    }</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">childArray</span>;</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Resolve default props</span></div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">type</span> &amp;&amp; <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">defaultProps</span> = <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>;</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">defaultProps</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] === <span style="color: #569cd6">undefined</span>) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">defaultProps</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #dcdcaa">ReactElement</span>(<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">ReactCurrentOwner</span>.<span style="color: #9cdcfe">current</span>, <span style="color: #9cdcfe">props</span>);</div><div>};</div><br /></div></div></div></div></div></div></foreignObject><text x="690" y="469" fill="#000000" font-family="Helvetica" font-size="12px">ReactElement.createElement = function (type, config, children) {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>