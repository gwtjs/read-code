<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1341px" height="941px" viewBox="-0.5 -0.5 1341 941" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-13T09:33:53.424Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot; etag=&quot;5GVkrqNCt-zag7GPvrOE&quot; version=&quot;14.1.8&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;feYCaBUQdYRIUxlk5dTh&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FReact.createElement.svg"><defs/><g><rect x="175" y="730" width="240" height="160" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 810px; margin-left: 295px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; color: rgb(33 , 33 , 33) ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">$$typeof</span>: <span class="object-value-symbol value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(196 , 26 , 22)">Symbol(react.element)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">key</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">props</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">{}</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">ref</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">type</span>: <span class="object-value-function value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; font-style: italic"><span class="object-value-function-prefix" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(13 , 34 , 170)">ƒ </span>App(props)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">_owner</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent selected" tabindex="-1" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; outline-width: 0px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">_store</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">{<span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(86 , 86 , 86)">validated</span>: <span class="object-value-boolean" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(13 , 34 , 170)">false</span>}</span></span></li></ol></div></div></div></foreignObject><text x="295" y="814" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">$$typeof: Symbol(react.element)key: null...</text></switch></g><rect x="60" y="210" width="270" height="50" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 235px; margin-left: 195px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><span style="background-color: rgb(31 , 31 , 31)"><span style="color: rgb(156 , 220 , 254) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">React</span>.<span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(220 , 220 , 170)">createElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">(</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">App</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px"><font color="#d4d4d4">,</font></span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(86 , 156 , 214)">null</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">)</span></span></div></div></div></foreignObject><text x="195" y="239" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">React.createElement(App,null)</text></switch></g><path d="M 650 470 L 596.37 470" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 591.12 470 L 598.12 466.5 L 596.37 470 L 598.12 473.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="650" y="0" width="690" height="940" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 470px; margin-left: 652px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #9cdcfe">ReactElement</span>.<span style="color: #dcdcaa">createElement</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">config</span>, <span style="color: #9cdcfe">children</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">propName</span>;</div><br /><div>  <span style="color: #6a9955">// Reserved names are extracted</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">props</span> = {};</div><br /><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">key</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">ref</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">self</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">source</span> = <span style="color: #569cd6">null</span>;</div><br /><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span> != <span style="color: #569cd6">null</span>) {</div><div>    <span style="color: #9cdcfe">ref</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span>;</div><div>    <span style="color: #9cdcfe">key</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #ce9178">''</span> + <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span>;</div><div>    <span style="color: #9cdcfe">self</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span>;</div><div>    <span style="color: #9cdcfe">source</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span>;</div><div>    <span style="color: #6a9955">// Remaining properties are added to a new props object</span></div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">config</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>) &amp;&amp; !<span style="color: #9cdcfe">RESERVED_PROPS</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>)) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">config</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Children can be more than one argument, and those are transferred onto</span></div><div>  <span style="color: #6a9955">// the newly allocated props object.</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childrenLength</span> = <span style="color: #569cd6">arguments</span>.<span style="color: #9cdcfe">length</span> - <span style="color: #b5cea8">2</span>;</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> === <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">children</span>;</div><div>  } <span style="color: #c586c0">else</span> <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> &gt; <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childArray</span> = <span style="color: #4ec9b0">Array</span>(<span style="color: #9cdcfe">childrenLength</span>);</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">childrenLength</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>      <span style="color: #9cdcfe">childArray</span>[<span style="color: #9cdcfe">i</span>] = <span style="color: #569cd6">arguments</span>[<span style="color: #9cdcfe">i</span> + <span style="color: #b5cea8">2</span>];</div><div>    }</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">childArray</span>;</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Resolve default props</span></div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">type</span> &amp;&amp; <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">defaultProps</span> = <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>;</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">defaultProps</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] === <span style="color: #569cd6">undefined</span>) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">defaultProps</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #dcdcaa">ReactElement</span>(<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">ReactCurrentOwner</span>.<span style="color: #9cdcfe">current</span>, <span style="color: #9cdcfe">props</span>);</div><div>};</div><br /></div></div></div></div></div></div></foreignObject><text x="652" y="474" fill="#000000" font-family="Helvetica" font-size="12px">ReactElement.createElement = function (type, config, children) {...</text></switch></g><path d="M 345 235 L 647.76 235" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><ellipse cx="338" cy="235" rx="7" ry="7" fill="#000000" stroke="#000000" pointer-events="all"/><path d="M 639.88 239.5 L 648.88 235 L 639.88 230.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 232px; margin-left: 490px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; "><span style="background-color: rgb(31 , 31 , 31)"><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">ReactElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">.</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(220 , 220 , 170)">createElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">(</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">App</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px"><font color="#d4d4d4">,</font></span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(86 , 156 , 214)">null</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">)</span></span></div></div></div></foreignObject><text x="490" y="232" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">ReactElement.cr...</text></switch></g><path d="M 295 630 L 295 723.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 295 728.88 L 291.5 721.88 L 295 723.63 L 298.5 721.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="310" width="590" height="320" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 470px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">ReactElement</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">owner</span>, <span style="color: #9cdcfe">props</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">element</span> = {</div><div>    <span style="color: #6a9955">// This tag allow us to uniquely identify this as a React Element</span></div><div>    <span style="color: #9cdcfe">$$typeof</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">REACT_ELEMENT_TYPE</span>,</div><br /><div>    <span style="color: #6a9955">// Built-in properties that belong on the element</span></div><div>    <span style="color: #9cdcfe">type</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">type</span>,</div><div>    <span style="color: #9cdcfe">key</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">key</span>,</div><div>    <span style="color: #9cdcfe">ref</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">ref</span>,</div><div>    <span style="color: #9cdcfe">props</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">props</span>,</div><br /><div>    <span style="color: #6a9955">// Record the component responsible for creating this element.</span></div><div>    <span style="color: #9cdcfe">_owner</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">owner</span></div><div>  };</div><div>  <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">element</span>;</div><div>};</div></div></div></div></div></foreignObject><text x="2" y="474" fill="#000000" font-family="Helvetica" font-size="12px">var ReactElement = function (type, key, ref, self, source, owner, props) {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>