<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1341px" height="941px" viewBox="-0.5 -0.5 1341 941" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-14T02:26:41.586Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot; etag=&quot;IL2y2YxJffJvlqH2BiEu&quot; version=&quot;14.1.8&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;feYCaBUQdYRIUxlk5dTh&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FReact.createElement.svg"><defs/><g><rect x="175" y="730" width="240" height="160" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 810px; margin-left: 295px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; color: rgb(33 , 33 , 33) ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">$$typeof</span>: <span class="object-value-symbol value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(196 , 26 , 22)">Symbol(react.element)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">key</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">props</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">{}</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">ref</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">type</span>: <span class="object-value-function value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; font-style: italic"><span class="object-value-function-prefix" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(13 , 34 , 170)">ƒ </span>App(props)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">_owner</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent selected" tabindex="-1" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; outline-width: 0px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name object-properties-section-dimmed" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145) ; opacity: 0.6">__proto__</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">Object</span></span></li></ol></span></li></ol></span></li></ol></div></div></div></foreignObject><text x="295" y="814" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">$$typeof: Symbol(react.element)key: null...</text></switch></g><rect x="60" y="210" width="270" height="50" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 235px; margin-left: 195px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><span style="background-color: rgb(31 , 31 , 31)"><span style="color: rgb(156 , 220 , 254) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">React</span><font color="#ffffff">.</font><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(220 , 220 , 170)">createElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">(</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">App</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px"><font color="#d4d4d4">,</font></span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(86 , 156 , 214)">null</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">)</span></span></div></div></div></foreignObject><text x="195" y="239" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">React.createElement(App,null)</text></switch></g><rect x="650" y="0" width="690" height="940" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 470px; margin-left: 652px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #9cdcfe">ReactElement</span>.<span style="color: #dcdcaa">createElement</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">config</span>, <span style="color: #9cdcfe">children</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">propName</span>;</div><br /><div>  <span style="color: #6a9955">// Reserved names are extracted</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">props</span> = {};</div><br /><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">key</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">ref</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">self</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">source</span> = <span style="color: #569cd6">null</span>;</div><br /><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span> != <span style="color: #569cd6">null</span>) {</div><div>    <span style="color: #9cdcfe">ref</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span>;</div><div>    <span style="color: #9cdcfe">key</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #ce9178">''</span> + <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span>;</div><div>    <span style="color: #9cdcfe">self</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span>;</div><div>    <span style="color: #9cdcfe">source</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span>;</div><div>    <span style="color: #6a9955">// Remaining properties are added to a new props object</span></div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">config</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>) &amp;&amp; !<span style="color: #9cdcfe">RESERVED_PROPS</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>)) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">config</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Children can be more than one argument, and those are transferred onto</span></div><div>  <span style="color: #6a9955">// the newly allocated props object.</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childrenLength</span> = <span style="color: #569cd6">arguments</span>.<span style="color: #9cdcfe">length</span> - <span style="color: #b5cea8">2</span>;</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> === <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">children</span>;</div><div>  } <span style="color: #c586c0">else</span> <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> &gt; <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childArray</span> = <span style="color: #4ec9b0">Array</span>(<span style="color: #9cdcfe">childrenLength</span>);</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">childrenLength</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>      <span style="color: #9cdcfe">childArray</span>[<span style="color: #9cdcfe">i</span>] = <span style="color: #569cd6">arguments</span>[<span style="color: #9cdcfe">i</span> + <span style="color: #b5cea8">2</span>];</div><div>    }</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">childArray</span>;</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Resolve default props</span></div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">type</span> &amp;&amp; <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">defaultProps</span> = <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>;</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">defaultProps</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] === <span style="color: #569cd6">undefined</span>) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">defaultProps</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #dcdcaa">ReactElement</span>(<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">ReactCurrentOwner</span>.<span style="color: #9cdcfe">current</span>, <span style="color: #9cdcfe">props</span>);</div><div>};</div><br /></div></div></div></div></div></div></foreignObject><text x="652" y="474" fill="#000000" font-family="Helvetica" font-size="12px">ReactElement.createElement = function (type, config, children) {...</text></switch></g><path d="M 345 235 L 647.76 235" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><ellipse cx="338" cy="235" rx="7" ry="7" fill="#000000" stroke="#000000" pointer-events="all"/><path d="M 639.88 239.5 L 648.88 235 L 639.88 230.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 232px; margin-left: 490px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; "><span style="background-color: rgb(31 , 31 , 31)"><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">ReactElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">.</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(220 , 220 , 170)">createElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">(</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">App</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px"><font color="#d4d4d4">,</font></span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(86 , 156 , 214)">null</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">)</span></span></div></div></div></foreignObject><text x="490" y="232" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">ReactElement.cr...</text></switch></g><path d="M 295 630 L 295 723.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 295 728.88 L 291.5 721.88 L 295 723.63 L 298.5 721.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="310" width="590" height="320" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 470px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">ReactElement</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">owner</span>, <span style="color: #9cdcfe">props</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">element</span> = {</div><div>    <span style="color: #6a9955">// This tag allow us to uniquely identify this as a React Element</span></div><div>    <span style="color: #9cdcfe">$$typeof</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">REACT_ELEMENT_TYPE</span>,</div><br /><div>    <span style="color: #6a9955">// Built-in properties that belong on the element</span></div><div>    <span style="color: #9cdcfe">type</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">type</span>,</div><div>    <span style="color: #9cdcfe">key</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">key</span>,</div><div>    <span style="color: #9cdcfe">ref</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">ref</span>,</div><div>    <span style="color: #9cdcfe">props</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">props</span>,</div><br /><div>    <span style="color: #6a9955">// Record the component responsible for creating this element.</span></div><div>    <span style="color: #9cdcfe">_owner</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">owner</span></div><div>  };</div><div>  <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">element</span>;</div><div>};</div></div></div></div></div></foreignObject><text x="2" y="474" fill="#000000" font-family="Helvetica" font-size="12px">var ReactElement = function (type, key, ref, self, source, owner, props) {...</text></switch></g><path d="M 635 470 L 592.24 470" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><ellipse cx="642" cy="470" rx="7" ry="7" fill="#000000" stroke="#000000" pointer-events="all"/><path d="M 600.12 465.5 L 591.12 470 L 600.12 474.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>