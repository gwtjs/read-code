<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1341px" height="941px" viewBox="-0.5 -0.5 1341 941" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-13T09:39:46.405Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot; etag=&quot;Rdm2Ob43lpyHNjMVg-vZ&quot; version=&quot;14.1.8&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;feYCaBUQdYRIUxlk5dTh&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FReact.createElement.svg"><defs/><g><rect x="175" y="730" width="240" height="160" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 810px; margin-left: 295px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; color: rgb(33 , 33 , 33) ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><ol class="children expanded" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; list-style-type: none ; padding-left: 12px ; font-family: &quot;consolas&quot; , &quot;lucida console&quot; , &quot;courier new&quot; , monospace"><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">$$typeof</span>: <span class="object-value-symbol value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(196 , 26 , 22)">Symbol(react.element)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">key</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">props</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">{}</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">ref</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">type</span>: <span class="object-value-function value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; font-style: italic"><span class="object-value-function-prefix" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(13 , 34 , 170)">ƒ </span>App(props)</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">_owner</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145)">_store</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">{<span class="name" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(86 , 86 , 86)">validated</span>: <span class="object-value-boolean" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(13 , 34 , 170)">false</span>}</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name object-properties-section-dimmed" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145) ; opacity: 0.6">_self</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name object-properties-section-dimmed" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145) ; opacity: 0.6">_source</span>: <span class="object-value-null value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(94 , 94 , 94)">null</span></span></li><li class="parent selected" tabindex="-1" style="box-sizing: border-box ; min-width: 0px ; min-height: 16px ; outline-width: 0px ; text-overflow: ellipsis ; position: relative ; display: flex ; align-items: center"><span class="name-and-value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; overflow: hidden ; text-overflow: ellipsis ; line-height: 16px"><span class="name object-properties-section-dimmed" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px ; color: rgb(136 , 19 , 145) ; opacity: 0.6">__proto__</span>: <span class="object-value-object value" style="box-sizing: border-box ; min-width: 0px ; min-height: 0px">Object</span></span></li></ol></span></li></ol></div></div></div></foreignObject><text x="295" y="814" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">$$typeof: Symbol(react.element)key: null...</text></switch></g><rect x="60" y="210" width="270" height="50" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 235px; margin-left: 195px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><span style="background-color: rgb(31 , 31 , 31)"><span style="color: rgb(156 , 220 , 254) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">React</span>.<span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(220 , 220 , 170)">createElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">(</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">App</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px"><font color="#d4d4d4">,</font></span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(86 , 156 , 214)">null</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">)</span></span></div></div></div></foreignObject><text x="195" y="239" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">React.createElement(App,null)</text></switch></g><path d="M 650 470 L 596.37 470" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 591.12 470 L 598.12 466.5 L 596.37 470 L 598.12 473.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="650" y="0" width="690" height="940" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 470px; margin-left: 652px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #9cdcfe">ReactElement</span>.<span style="color: #dcdcaa">createElement</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">config</span>, <span style="color: #9cdcfe">children</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">propName</span>;</div><br /><div>  <span style="color: #6a9955">// Reserved names are extracted</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">props</span> = {};</div><br /><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">key</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">ref</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">self</span> = <span style="color: #569cd6">null</span>;</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">source</span> = <span style="color: #569cd6">null</span>;</div><br /><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span> != <span style="color: #569cd6">null</span>) {</div><div>    <span style="color: #9cdcfe">ref</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">ref</span>;</div><div>    <span style="color: #9cdcfe">key</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #ce9178">''</span> + <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">key</span>;</div><div>    <span style="color: #9cdcfe">self</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__self</span>;</div><div>    <span style="color: #9cdcfe">source</span> = <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span> === <span style="color: #569cd6">undefined</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">config</span>.<span style="color: #9cdcfe">__source</span>;</div><div>    <span style="color: #6a9955">// Remaining properties are added to a new props object</span></div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">config</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">config</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>) &amp;&amp; !<span style="color: #9cdcfe">RESERVED_PROPS</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">propName</span>)) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">config</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Children can be more than one argument, and those are transferred onto</span></div><div>  <span style="color: #6a9955">// the newly allocated props object.</span></div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childrenLength</span> = <span style="color: #569cd6">arguments</span>.<span style="color: #9cdcfe">length</span> - <span style="color: #b5cea8">2</span>;</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> === <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">children</span>;</div><div>  } <span style="color: #c586c0">else</span> <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">childrenLength</span> &gt; <span style="color: #b5cea8">1</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">childArray</span> = <span style="color: #4ec9b0">Array</span>(<span style="color: #9cdcfe">childrenLength</span>);</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">childrenLength</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>      <span style="color: #9cdcfe">childArray</span>[<span style="color: #9cdcfe">i</span>] = <span style="color: #569cd6">arguments</span>[<span style="color: #9cdcfe">i</span> + <span style="color: #b5cea8">2</span>];</div><div>    }</div><div>    <span style="color: #9cdcfe">props</span>.<span style="color: #9cdcfe">children</span> = <span style="color: #9cdcfe">childArray</span>;</div><div>  }</div><br /><div>  <span style="color: #6a9955">// Resolve default props</span></div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">type</span> &amp;&amp; <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">defaultProps</span> = <span style="color: #9cdcfe">type</span>.<span style="color: #9cdcfe">defaultProps</span>;</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">propName</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">defaultProps</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] === <span style="color: #569cd6">undefined</span>) {</div><div>        <span style="color: #9cdcfe">props</span>[<span style="color: #9cdcfe">propName</span>] = <span style="color: #9cdcfe">defaultProps</span>[<span style="color: #9cdcfe">propName</span>];</div><div>      }</div><div>    }</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #dcdcaa">ReactElement</span>(<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">ReactCurrentOwner</span>.<span style="color: #9cdcfe">current</span>, <span style="color: #9cdcfe">props</span>);</div><div>};</div><br /></div></div></div></div></div></div></foreignObject><text x="652" y="474" fill="#000000" font-family="Helvetica" font-size="12px">ReactElement.createElement = function (type, config, children) {...</text></switch></g><path d="M 345 235 L 647.76 235" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><ellipse cx="338" cy="235" rx="7" ry="7" fill="#000000" stroke="#000000" pointer-events="all"/><path d="M 639.88 239.5 L 648.88 235 L 639.88 230.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 232px; margin-left: 490px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; "><span style="background-color: rgb(31 , 31 , 31)"><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">ReactElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">.</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(220 , 220 , 170)">createElement</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">(</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(156 , 220 , 254)">App</span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px"><font color="#d4d4d4">,</font></span><span style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; color: rgb(86 , 156 , 214)">null</span><span style="color: rgb(212 , 212 , 212) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px">)</span></span></div></div></div></foreignObject><text x="490" y="232" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">ReactElement.cr...</text></switch></g><path d="M 295 630 L 295 723.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 295 728.88 L 291.5 721.88 L 295 723.63 L 298.5 721.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="310" width="590" height="320" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 470px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">ReactElement</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">type</span>, <span style="color: #9cdcfe">key</span>, <span style="color: #9cdcfe">ref</span>, <span style="color: #9cdcfe">self</span>, <span style="color: #9cdcfe">source</span>, <span style="color: #9cdcfe">owner</span>, <span style="color: #9cdcfe">props</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">element</span> = {</div><div>    <span style="color: #6a9955">// This tag allow us to uniquely identify this as a React Element</span></div><div>    <span style="color: #9cdcfe">$$typeof</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">REACT_ELEMENT_TYPE</span>,</div><br /><div>    <span style="color: #6a9955">// Built-in properties that belong on the element</span></div><div>    <span style="color: #9cdcfe">type</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">type</span>,</div><div>    <span style="color: #9cdcfe">key</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">key</span>,</div><div>    <span style="color: #9cdcfe">ref</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">ref</span>,</div><div>    <span style="color: #9cdcfe">props</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">props</span>,</div><br /><div>    <span style="color: #6a9955">// Record the component responsible for creating this element.</span></div><div>    <span style="color: #9cdcfe">_owner</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">owner</span></div><div>  };</div><div>  <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">element</span>;</div><div>};</div></div></div></div></div></foreignObject><text x="2" y="474" fill="#000000" font-family="Helvetica" font-size="12px">var ReactElement = function (type, key, ref, self, source, owner, props) {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>