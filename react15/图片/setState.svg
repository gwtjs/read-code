<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1831px" height="2021px" viewBox="-0.5 -0.5 1831 2021" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-19T08:28:43.065Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot; etag=&quot;piHiK1tSHpujCIv34BzG&quot; version=&quot;14.1.8&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;IIiUVPoJaDH913n7NWob&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FsetState.svg"><defs/><g><path d="M 275 120 L 275 145 L 380 145 L 380 163.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 380 168.88 L 376.5 161.88 L 380 163.63 L 383.5 161.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="0" width="550" height="120" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 60px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">ReactComponent</span>.<span style="color: #9cdcfe">prototype</span>.<span style="color: #dcdcaa">setState</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">partialState</span>, <span style="color: #9cdcfe">callback</span>) {</div><div>  <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueSetState</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">partialState</span>);</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callback</span>) {</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueCallback</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">callback</span>, <span style="color: #ce9178">'setState'</span>);</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></foreignObject><text x="2" y="64" fill="#000000" font-family="Helvetica" font-size="12px">ReactComponent.prototype.setState = function (partialState, callback) {...</text></switch></g><path d="M 380 410 L 380 442.3 L 290 442.3 L 290 468.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 290 473.38 L 286.5 466.38 L 290 468.13 L 293.5 466.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="170" width="760" height="240" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 290px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">enqueueSetState</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">partialState</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #ce9178">'setState'</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>      <span style="color: #c586c0">return</span>;</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> || (<span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> = []);</div><div>    <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">partialState</span>);</div><br /><div>    <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>  }</div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2" y="294" fill="#000000" font-family="Helvetica" font-size="12px">enqueueSetState: function (publicInstance, partialState) {...</text></switch></g><path d="M 840 230 L 766.37 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 761.12 230 L 768.12 226.5 L 766.37 230 L 768.12 233.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="840" y="155" width="580" height="150" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 230px; margin-left: 842px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">callerName</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #9cdcfe">ReactInstanceMap</span>.<span style="color: #dcdcaa">get</span>(<span style="color: #9cdcfe">publicInstance</span>);</div><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>    <span style="color: #c586c0">return</span> <span style="color: #569cd6">null</span>;</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">internalInstance</span>;</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="842" y="234" fill="#000000" font-family="Helvetica" font-size="12px">function getInternalInstanceReadyForUpdate(publicInstance, callerName) {...</text></switch></g><path d="M 580 514.5 L 823.63 514.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 828.88 514.5 L 821.88 518 L 823.63 514.5 L 821.88 511 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="474.5" width="580" height="80" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>) {</div><div>  <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2" y="518" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(internalInstance) {...</text></switch></g><path d="M 1140 669.5 L 1140 713.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1140 718.88 L 1136.5 711.88 L 1140 713.63 L 1143.5 711.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="830" y="359.5" width="620" height="310" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 832px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">component</span>) {</div><div>  <span style="color: #dcdcaa">ensureInjected</span>();</div><br /><div>  <span style="color: #6a9955">// Various parts of our code (such as ReactCompositeComponent's</span></div><div>  <span style="color: #6a9955">// _renderValidatedComponent) assume that calls to render aren't nested;</span></div><div>  <span style="color: #6a9955">// verify that that's the case. (This is called by each top-level update</span></div><div>  <span style="color: #6a9955">// function, like setProps, setState, forceUpdate, etc.; creation and</span></div><div>  <span style="color: #6a9955">// destruction of top-level components is guarded in ReactMount.)</span></div><br /><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span>) {</div><div>    <span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #dcdcaa">batchedUpdates</span>(<span style="color: #dcdcaa">enqueueUpdate</span>, <span style="color: #9cdcfe">component</span>);</div><div>    <span style="color: #c586c0">return</span>;</div><div>  }</div><br /><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">component</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="832" y="518" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(component) {...</text></switch></g><path d="M 830 825 L 726.37 825" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 721.12 825 L 728.12 821.5 L 726.37 825 L 728.12 828.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="830" y="720" width="620" height="210" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 832px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">RESET_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #dcdcaa">close</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> () {</div><div>    <span style="color: #9cdcfe">ReactDefaultBatchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span> = <span style="color: #569cd6">false</span>;</div><div>  }</div><div>};</div><br /><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">FLUSH_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #9cdcfe">close</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">flushBatchedUpdates</span>.<span style="color: #dcdcaa">bind</span>(<span style="color: #9cdcfe">ReactUpdates</span>)</div><div>};</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="832" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var RESET_BATCHED_UPDATES = {...</text></switch></g><path d="M 455 995 L 455 1015 L 417.5 1015 L 417.5 1023.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 417.5 1028.88 L 414 1021.88 L 417.5 1023.63 L 421 1021.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="190" y="655" width="530" height="340" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 192px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #dcdcaa">flushBatchedUpdates</span> = <span style="color: #569cd6">function</span> () {</div><div>  <span style="color: rgb(197 , 134 , 192)">while</span> (<span style="color: rgb(156 , 220 , 254)">dirtyComponents</span>.<span style="color: rgb(156 , 220 , 254)">length</span> || <span style="color: rgb(156 , 220 , 254)">asapEnqueued</span>) {</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #9cdcfe">length</span>) {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">transaction</span> = <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">perform</span>(<span style="color: #dcdcaa">runBatchedUpdates</span>, <span style="color: #569cd6">null</span>, <span style="color: #9cdcfe">transaction</span>);</div><div>      <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">transaction</span>);</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">asapEnqueued</span>) {</div><div>      <span style="color: #9cdcfe">asapEnqueued</span> = <span style="color: #569cd6">false</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">asapCallbackQueue</span>;</div><div>      <span style="color: #9cdcfe">asapCallbackQueue</span> = <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">notifyAll</span>();</div><div>      <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">queue</span>);</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="192" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var flushBatchedUpdates = function () {...</text></switch></g><path d="M 775 1162.5 L 822.5 1162.5 L 822.5 1090 L 863.63 1090" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 868.88 1090 L 861.88 1093.5 L 863.63 1090 L 861.88 1086.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="60" y="1030" width="715" height="530" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1295px; margin-left: 62px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">runBatchedUpdates</span>(<span style="color: #9cdcfe">transaction</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">len</span> = <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">dirtyComponentsLength</span>;</div><div>  <span style="color: #6a9955">// Since reconciling a component higher in the owner hierarchy usually (not</span></div><div>  <span style="color: #6a9955">// always -- see shouldComponentUpdate()) will reconcile children, reconcile</span></div><div>  <span style="color: #6a9955">// them before their children by sorting the array.</span></div><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">sort</span>(<span style="color: #dcdcaa">mountOrderComparator</span>);</div><br /><div>  <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">len</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>    <span style="color: #6a9955">// If a component is unmounted before pending changes apply, it will still</span></div><div>    <span style="color: #6a9955">// be here, but we assume that it has cleared its _pendingCallbacks and</span></div><div>    <span style="color: #6a9955">// that performUpdateIfNecessary is a noop.</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">component</span> = <span style="color: #9cdcfe">dirtyComponents</span>[<span style="color: #9cdcfe">i</span>];</div><br /><div>    <span style="color: #6a9955">// If performUpdateIfNecessary happens to enqueue any new updates, we</span></div><div>    <span style="color: #6a9955">// shouldn't execute the callbacks until the next render happens, so</span></div><div>    <span style="color: #6a9955">// stash the callbacks first</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">callbacks</span> = <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span>;</div><div>    <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span> = <span style="color: #569cd6">null</span>;<br /></div><br /><div>    <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">performUpdateIfNecessary</span>(<span style="color: #9cdcfe">component</span>, <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">reconcileTransaction</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callbacks</span>) {</div><div>      <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">j</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">j</span> &lt; <span style="color: #9cdcfe">callbacks</span>.<span style="color: #9cdcfe">length</span>; <span style="color: #9cdcfe">j</span>++) {</div><div>        <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">callbackQueue</span>.<span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">callbacks</span>[<span style="color: #9cdcfe">j</span>], <span style="color: #9cdcfe">component</span>.<span style="color: #dcdcaa">getPublicInstance</span>());</div><div>      }</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="62" y="1299" fill="#000000" font-family="Helvetica" font-size="12px">function runBatchedUpdates(transaction) {...</text></switch></g><path d="M 1185 1150 L 1185 1170 L 1350 1170 L 1350 1173.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1350 1178.88 L 1346.5 1171.88 L 1350 1173.63 L 1353.5 1171.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="870" y="1030" width="630" height="120" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1090px; margin-left: 872px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">performUpdateIfNecessary</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">transaction</span>) {</div><div>    <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #dcdcaa">performUpdateIfNecessary</span>(<span style="color: #9cdcfe">transaction</span>);</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">process</span>.<span style="color: #9cdcfe">env</span>.<span style="color: #4fc1ff">NODE_ENV</span> !== <span style="color: #ce9178">'production'</span>) {</div><div>      <span style="color: #9cdcfe">ReactInstrumentation</span>.<span style="color: #9cdcfe">debugTool</span>.<span style="color: #dcdcaa">onUpdateComponent</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="872" y="1094" fill="#000000" font-family="Helvetica" font-size="12px">performUpdateIfNecessary: function (internalInstance, transaction) {...</text></switch></g><path d="M 870 1592.5 L 822.5 1592.5 L 822.5 1810 L 781.37 1810" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 776.12 1810 L 783.12 1806.5 L 781.37 1810 L 783.12 1813.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="870" y="1180" width="960" height="550" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1455px; margin-left: 872px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">_performComponentUpdate</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">unmaskedContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">inst</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_instance</span>;</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">hasComponentDidUpdate</span> = <span style="color: #4ec9b0">Boolean</span>(<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentDidUpdate</span>);</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevProps</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevState</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevContext</span>;</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">hasComponentDidUpdate</span>) {</div><div>      <span style="color: #9cdcfe">prevProps</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span>;</div><div>      <span style="color: #9cdcfe">prevState</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span>;</div><div>      <span style="color: #9cdcfe">prevContext</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentWillUpdate</span>) {</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">componentWillUpdate</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>    }</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span> = <span style="color: #9cdcfe">nextElement</span>;</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> = <span style="color: #9cdcfe">unmaskedContext</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span> = <span style="color: #9cdcfe">nextProps</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span> = <span style="color: #9cdcfe">nextState</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span> = <span style="color: #9cdcfe">nextContext</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_updateRenderedComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">unmaskedContext</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">hasComponentDidUpdate</span>) {</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">getReactMountReady</span>().<span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentDidUpdate</span>.<span style="color: #dcdcaa">bind</span>(<span style="color: #9cdcfe">inst</span>, <span style="color: #9cdcfe">prevProps</span>, <span style="color: #9cdcfe">prevState</span>, <span style="color: #9cdcfe">prevContext</span>), <span style="color: #9cdcfe">inst</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="872" y="1459" fill="#000000" font-family="Helvetica" font-size="12px">_performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {...</text></switch></g><rect x="115" y="1600" width="660" height="420" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1810px; margin-left: 117px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">_updateRenderedComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevComponentInstance</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevRenderedElement</span> = <span style="color: #9cdcfe">prevComponentInstance</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextRenderedElement</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_renderValidatedComponent</span>();</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #dcdcaa">shouldUpdateReactComponent</span>(<span style="color: #9cdcfe">prevRenderedElement</span>, <span style="color: #9cdcfe">nextRenderedElement</span>)) {</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #9cdcfe">prevComponentInstance</span>, <span style="color: #9cdcfe">nextRenderedElement</span>, </div><div><span style="color: #9cdcfe">        transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processChildContext</span>(<span style="color: #9cdcfe">context</span>));</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">oldNativeNode</span> = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">getNativeNode</span>(<span style="color: #9cdcfe">prevComponentInstance</span>);</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">unmountComponent</span>(<span style="color: #9cdcfe">prevComponentInstance</span>, <span style="color: #569cd6">false</span>);</div><br /><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedNodeType</span> = <span style="color: #9cdcfe">ReactNodeTypes</span>.<span style="color: #dcdcaa">getType</span>(<span style="color: #9cdcfe">nextRenderedElement</span>);</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_instantiateReactComponent</span>(<span style="color: #9cdcfe">nextRenderedElement</span>);</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextMarkup</span> = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">mountComponent</span>(</div><div><span style="color: #569cd6">        this</span>.<span style="color: #9cdcfe">_renderedComponent</span>, </div><div><span style="color: #9cdcfe">        transaction</span>, </div><div><span style="color: #569cd6">        this</span>.<span style="color: #9cdcfe">_nativeParent</span>, </div><div><span style="color: #569cd6">        this</span>.<span style="color: #9cdcfe">_nativeContainerInfo</span>, </div><div><span style="color: #569cd6">        this</span>.<span style="color: #dcdcaa">_processChildContext</span>(<span style="color: #9cdcfe">context</span>));</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_replaceNodeWithMarkup</span>(<span style="color: #9cdcfe">oldNativeNode</span>, <span style="color: #9cdcfe">nextMarkup</span>);</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="117" y="1814" fill="#000000" font-family="Helvetica" font-size="12px">_updateRenderedComponent: function (transaction, context) {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>