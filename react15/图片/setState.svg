<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1981px" height="2891px" viewBox="-0.5 -0.5 1981 2891" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-19T09:20:57.277Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot; etag=&quot;H9GPAQzajujXTvCMNDD1&quot; version=&quot;14.1.8&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;IIiUVPoJaDH913n7NWob&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FsetState.svg"><defs/><g><path d="M 560 120 L 560 163.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 560 168.88 L 556.5 161.88 L 560 163.63 L 563.5 161.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="285" y="0" width="550" height="120" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 60px; margin-left: 287px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">ReactComponent</span>.<span style="color: #9cdcfe">prototype</span>.<span style="color: #dcdcaa">setState</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">partialState</span>, <span style="color: #9cdcfe">callback</span>) {</div><div>  <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueSetState</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">partialState</span>);</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callback</span>) {</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueCallback</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">callback</span>, <span style="color: #ce9178">'setState'</span>);</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></foreignObject><text x="287" y="64" fill="#000000" font-family="Helvetica" font-size="12px">ReactComponent.prototype.setState = function (partialState, callback) {...</text></switch></g><path d="M 560 410 L 560 468.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 560 473.88 L 556.5 466.88 L 560 468.63 L 563.5 466.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="180" y="170" width="760" height="240" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 290px; margin-left: 182px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">enqueueSetState</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">partialState</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #ce9178">'setState'</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>      <span style="color: #c586c0">return</span>;</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> || (<span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> = []);</div><div>    <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">partialState</span>);</div><br /><div>    <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>  }</div></div></div></div></div></div></div></div></div></div></foreignObject><text x="182" y="294" fill="#000000" font-family="Helvetica" font-size="12px">enqueueSetState: function (publicInstance, partialState) {...</text></switch></g><path d="M 1020 230 L 946.37 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 941.12 230 L 948.12 226.5 L 946.37 230 L 948.12 233.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1020" y="155" width="580" height="150" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 230px; margin-left: 1022px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">callerName</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #9cdcfe">ReactInstanceMap</span>.<span style="color: #dcdcaa">get</span>(<span style="color: #9cdcfe">publicInstance</span>);</div><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>    <span style="color: #c586c0">return</span> <span style="color: #569cd6">null</span>;</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">internalInstance</span>;</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1022" y="234" fill="#000000" font-family="Helvetica" font-size="12px">function getInternalInstanceReadyForUpdate(publicInstance, callerName) {...</text></switch></g><path d="M 850 515 L 930 515 L 1003.63 514.54" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1008.88 514.51 L 1001.9 518.05 L 1003.63 514.54 L 1001.86 511.05 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="270" y="475" width="580" height="80" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 272px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>) {</div><div>  <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="272" y="519" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(internalInstance) {...</text></switch></g><path d="M 1320 669.5 L 1320 713.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1320 718.88 L 1316.5 711.88 L 1320 713.63 L 1323.5 711.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1010" y="359.5" width="620" height="310" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 1012px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">component</span>) {</div><div>  <span style="color: #dcdcaa">ensureInjected</span>();</div><br /><div>  <span style="color: #6a9955">// Various parts of our code (such as ReactCompositeComponent's</span></div><div>  <span style="color: #6a9955">// _renderValidatedComponent) assume that calls to render aren't nested;</span></div><div>  <span style="color: #6a9955">// verify that that's the case. (This is called by each top-level update</span></div><div>  <span style="color: #6a9955">// function, like setProps, setState, forceUpdate, etc.; creation and</span></div><div>  <span style="color: #6a9955">// destruction of top-level components is guarded in ReactMount.)</span></div><br /><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span>) {</div><div>    <span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #dcdcaa">batchedUpdates</span>(<span style="color: #dcdcaa">enqueueUpdate</span>, <span style="color: #9cdcfe">component</span>);</div><div>    <span style="color: #c586c0">return</span>;</div><div>  }</div><br /><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">component</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1012" y="518" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(component) {...</text></switch></g><path d="M 1010 825 L 868.87 825" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 863.62 825 L 870.62 821.5 L 868.87 825 L 870.62 828.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1010" y="720" width="620" height="210" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 1012px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">RESET_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #dcdcaa">close</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> () {</div><div>    <span style="color: #9cdcfe">ReactDefaultBatchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span> = <span style="color: #569cd6">false</span>;</div><div>  }</div><div>};</div><br /><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">FLUSH_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #9cdcfe">close</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">flushBatchedUpdates</span>.<span style="color: #dcdcaa">bind</span>(<span style="color: #9cdcfe">ReactUpdates</span>)</div><div>};</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1012" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var RESET_BATCHED_UPDATES = {...</text></switch></g><path d="M 597.5 995 L 597.5 1015 L 597.5 1010 L 597.5 1023.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 597.5 1028.88 L 594 1021.88 L 597.5 1023.63 L 601 1021.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="332.5" y="655" width="530" height="340" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 335px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #dcdcaa">flushBatchedUpdates</span> = <span style="color: #569cd6">function</span> () {</div><div>  <span style="color: rgb(197 , 134 , 192)">while</span> (<span style="color: rgb(156 , 220 , 254)">dirtyComponents</span>.<span style="color: rgb(156 , 220 , 254)">length</span> || <span style="color: rgb(156 , 220 , 254)">asapEnqueued</span>) {</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #9cdcfe">length</span>) {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">transaction</span> = <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">perform</span>(<span style="color: #dcdcaa">runBatchedUpdates</span>, <span style="color: #569cd6">null</span>, <span style="color: #9cdcfe">transaction</span>);</div><div>      <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">transaction</span>);</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">asapEnqueued</span>) {</div><div>      <span style="color: #9cdcfe">asapEnqueued</span> = <span style="color: #569cd6">false</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">asapCallbackQueue</span>;</div><div>      <span style="color: #9cdcfe">asapCallbackQueue</span> = <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">notifyAll</span>();</div><div>      <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">queue</span>);</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="335" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var flushBatchedUpdates = function () {...</text></switch></g><path d="M 955 1162.5 L 1035 1162.5 L 1035 1110 L 1108.63 1110" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1113.88 1110 L 1106.88 1113.5 L 1108.63 1110 L 1106.88 1106.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="240" y="1030" width="715" height="530" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1295px; margin-left: 242px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">runBatchedUpdates</span>(<span style="color: #9cdcfe">transaction</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">len</span> = <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">dirtyComponentsLength</span>;</div><div>  <span style="color: #6a9955">// Since reconciling a component higher in the owner hierarchy usually (not</span></div><div>  <span style="color: #6a9955">// always -- see shouldComponentUpdate()) will reconcile children, reconcile</span></div><div>  <span style="color: #6a9955">// them before their children by sorting the array.</span></div><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">sort</span>(<span style="color: #dcdcaa">mountOrderComparator</span>);</div><br /><div>  <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">len</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>    <span style="color: #6a9955">// If a component is unmounted before pending changes apply, it will still</span></div><div>    <span style="color: #6a9955">// be here, but we assume that it has cleared its _pendingCallbacks and</span></div><div>    <span style="color: #6a9955">// that performUpdateIfNecessary is a noop.</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">component</span> = <span style="color: #9cdcfe">dirtyComponents</span>[<span style="color: #9cdcfe">i</span>];</div><br /><div>    <span style="color: #6a9955">// If performUpdateIfNecessary happens to enqueue any new updates, we</span></div><div>    <span style="color: #6a9955">// shouldn't execute the callbacks until the next render happens, so</span></div><div>    <span style="color: #6a9955">// stash the callbacks first</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">callbacks</span> = <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span>;</div><div>    <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span> = <span style="color: #569cd6">null</span>;<br /></div><br /><div>    <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">performUpdateIfNecessary</span>(<span style="color: #9cdcfe">component</span>, <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">reconcileTransaction</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callbacks</span>) {</div><div>      <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">j</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">j</span> &lt; <span style="color: #9cdcfe">callbacks</span>.<span style="color: #9cdcfe">length</span>; <span style="color: #9cdcfe">j</span>++) {</div><div>        <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">callbackQueue</span>.<span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">callbacks</span>[<span style="color: #9cdcfe">j</span>], <span style="color: #9cdcfe">component</span>.<span style="color: #dcdcaa">getPublicInstance</span>());</div><div>      }</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="242" y="1299" fill="#000000" font-family="Helvetica" font-size="12px">function runBatchedUpdates(transaction) {...</text></switch></g><path d="M 1430 1170 L 1430 1213.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1430 1218.88 L 1426.5 1211.88 L 1430 1213.63 L 1433.5 1211.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1115" y="1050" width="630" height="120" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1110px; margin-left: 1117px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">performUpdateIfNecessary</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">transaction</span>) {</div><div>    <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #dcdcaa">performUpdateIfNecessary</span>(<span style="color: #9cdcfe">transaction</span>);</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">process</span>.<span style="color: #9cdcfe">env</span>.<span style="color: #4fc1ff">NODE_ENV</span> !== <span style="color: #ce9178">'production'</span>) {</div><div>      <span style="color: #9cdcfe">ReactInstrumentation</span>.<span style="color: #9cdcfe">debugTool</span>.<span style="color: #dcdcaa">onUpdateComponent</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1117" y="1114" fill="#000000" font-family="Helvetica" font-size="12px">performUpdateIfNecessary: function (internalInstance, transaction) {...</text></switch></g><path d="M 1430 1390 L 1430 1447.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1430 1452.88 L 1426.5 1445.88 L 1430 1447.63 L 1433.5 1445.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 990 1305 L 970 1305 L 970 1495 L 975 1495 L 975 1812.5 L 961.37 1812.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 956.12 1812.5 L 963.12 1809 L 961.37 1812.5 L 963.12 1816 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="990" y="1220" width="880" height="170" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1305px; margin-left: 992px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">performUpdateIfNecessary</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>) {</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingElement</span> != <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #569cd6">this</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>);</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> !== <span style="color: #569cd6">null</span> || <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingForceUpdate</span>) {</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #4ec9b0">updateComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="992" y="1309" fill="#000000" font-family="Helvetica" font-size="12px">performUpdateIfNecessary: function (transaction) {...</text></switch></g><path d="M 955 2237.5 L 987.5 2237.5 L 987.5 2370 L 1013.63 2370" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1018.88 2370 L 1011.88 2373.5 L 1013.63 2370 L 1011.88 2366.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="1600" width="955" height="850" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2025px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">updateComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">prevParentElement</span>, <span style="color: #9cdcfe">nextParentElement</span>, <span style="color: #9cdcfe">prevUnmaskedContext</span>, <span style="color: #9cdcfe">nextUnmaskedContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">inst</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_instance</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">willReceive</span> = <span style="color: #569cd6">false</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextContext</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextProps</span>;</div><br /><div>    <span style="color: #6a9955">// Determine if the context has changed or not</span></div><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> === <span style="color: #9cdcfe">nextUnmaskedContext</span>) {</div><div>      <span style="color: #9cdcfe">nextContext</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span>;</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #9cdcfe">nextContext</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processContext</span>(<span style="color: #9cdcfe">nextUnmaskedContext</span>);</div><div>      <span style="color: #9cdcfe">willReceive</span> = <span style="color: #569cd6">true</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">prevParentElement</span> === <span style="color: #9cdcfe">nextParentElement</span>) {</div><div>      <span style="color: #9cdcfe">nextProps</span> = <span style="color: #9cdcfe">nextParentElement</span>.<span style="color: #9cdcfe">props</span>;</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #9cdcfe">nextProps</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processProps</span>(<span style="color: #9cdcfe">nextParentElement</span>.<span style="color: #9cdcfe">props</span>);</div><div>      <span style="color: #9cdcfe">willReceive</span> = <span style="color: #569cd6">true</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">willReceive</span> &amp;&amp; <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentWillReceiveProps</span>) {</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">componentWillReceiveProps</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextState</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processPendingState</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextContext</span>);</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">shouldUpdate</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingForceUpdate</span> || !<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">shouldComponentUpdate</span> </div><div>      || <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">shouldComponentUpdate</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">shouldUpdate</span>) {</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingForceUpdate</span> = <span style="color: #569cd6">false</span>;</div><div>      <span style="color: #6a9955">// Will set `this.props`, `this.state` and `this.context`.</span></div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_performComponentUpdate</span>(<span style="color: #9cdcfe">nextParentElement</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">nextUnmaskedContext</span>);</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #6a9955">// If it's determined that a component should not update, we still want</span></div><div>      <span style="color: #6a9955">// to set props and state but we shortcut the rest of the update.</span></div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span> = <span style="color: #9cdcfe">nextParentElement</span>;</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> = <span style="color: #9cdcfe">nextUnmaskedContext</span>;</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span> = <span style="color: #9cdcfe">nextProps</span>;</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span> = <span style="color: #9cdcfe">nextState</span>;</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span> = <span style="color: #9cdcfe">nextContext</span>;</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2" y="2029" fill="#000000" font-family="Helvetica" font-size="12px">updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {...</text></switch></g><path d="M 1430 1834 L 1430 1873.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1430 1878.88 L 1426.5 1871.88 L 1430 1873.63 L 1433.5 1871.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1020" y="1454" width="820" height="380" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1644px; margin-left: 1022px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">receiveComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevElement</span> = <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">nextElement</span> === <span style="color: #9cdcfe">prevElement</span> &amp;&amp; <span style="color: #9cdcfe">context</span> === <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_context</span>) {</div><div>      <span style="color: #c586c0">return</span>;</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">refsChanged</span> = <span style="color: #9cdcfe">ReactRef</span>.<span style="color: #dcdcaa">shouldUpdateRefs</span>(<span style="color: #9cdcfe">prevElement</span>, <span style="color: #9cdcfe">nextElement</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">refsChanged</span>) {</div><div>      <span style="color: #9cdcfe">ReactRef</span>.<span style="color: #dcdcaa">detachRefs</span>(<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">prevElement</span>);</div><div>    }</div><br /><div>    <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">refsChanged</span> &amp;&amp; <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_currentElement</span> &amp;&amp; <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_currentElement</span>.<span style="color: #9cdcfe">ref</span> != <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">getReactMountReady</span>().<span style="color: #dcdcaa">enqueue</span>(<span style="color: #dcdcaa">attachRefs</span>, <span style="color: #9cdcfe">internalInstance</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1022" y="1648" fill="#000000" font-family="Helvetica" font-size="12px">receiveComponent: function (internalInstance, nextElement, transaction, context) {...</text></switch></g><path d="M 1060 1960 L 1007.5 1960 L 1007.5 1812.5 L 961.37 1812.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 956.12 1812.5 L 963.12 1809 L 961.37 1812.5 L 963.12 1816 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1060" y="1880" width="740" height="160" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1960px; margin-left: 1062px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">receiveComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">nextContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevElement</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevContext</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingElement</span> = <span style="color: #569cd6">null</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">updateComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">prevElement</span>, <span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">prevContext</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1062" y="1964" fill="#000000" font-family="Helvetica" font-size="12px">receiveComponent: function (nextElement, transaction, nextContext) {...</text></switch></g><path d="M 1020 2510 L 987.5 2510 L 987.5 2695 L 961.37 2695" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 956.12 2695 L 963.12 2691.5 L 961.37 2695 L 963.12 2698.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1020" y="2090" width="960" height="560" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2370px; margin-left: 1022px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">_performComponentUpdate</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">unmaskedContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">inst</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_instance</span>;</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">hasComponentDidUpdate</span> = <span style="color: #4ec9b0">Boolean</span>(<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentDidUpdate</span>);</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevProps</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevState</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevContext</span>;</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">hasComponentDidUpdate</span>) {</div><div>      <span style="color: #9cdcfe">prevProps</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span>;</div><div>      <span style="color: #9cdcfe">prevState</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span>;</div><div>      <span style="color: #9cdcfe">prevContext</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentWillUpdate</span>) {</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">componentWillUpdate</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>    }</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span> = <span style="color: #9cdcfe">nextElement</span>;</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> = <span style="color: #9cdcfe">unmaskedContext</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span> = <span style="color: #9cdcfe">nextProps</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span> = <span style="color: #9cdcfe">nextState</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span> = <span style="color: #9cdcfe">nextContext</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_updateRenderedComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">unmaskedContext</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">hasComponentDidUpdate</span>) {</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">getReactMountReady</span>().<span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentDidUpdate</span>.<span style="color: #dcdcaa">bind</span>(<span style="color: #9cdcfe">inst</span>, <span style="color: #9cdcfe">prevProps</span>, <span style="color: #9cdcfe">prevState</span>, <span style="color: #9cdcfe">prevContext</span>), <span style="color: #9cdcfe">inst</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1022" y="2374" fill="#000000" font-family="Helvetica" font-size="12px">_performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {...</text></switch></g><rect x="10" y="2500" width="945" height="390" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2695px; margin-left: 12px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">_updateRenderedComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevComponentInstance</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevRenderedElement</span> = <span style="color: #9cdcfe">prevComponentInstance</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextRenderedElement</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_renderValidatedComponent</span>();</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #dcdcaa">shouldUpdateReactComponent</span>(<span style="color: #9cdcfe">prevRenderedElement</span>, <span style="color: #9cdcfe">nextRenderedElement</span>)) {</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #9cdcfe">prevComponentInstance</span>, <span style="color: #9cdcfe">nextRenderedElement</span>, </div><div><span style="color: #9cdcfe">        transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processChildContext</span>(<span style="color: #9cdcfe">context</span>));</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">oldNativeNode</span> = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">getNativeNode</span>(<span style="color: #9cdcfe">prevComponentInstance</span>);</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">unmountComponent</span>(<span style="color: #9cdcfe">prevComponentInstance</span>, <span style="color: #569cd6">false</span>);</div><br /><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedNodeType</span> = <span style="color: #9cdcfe">ReactNodeTypes</span>.<span style="color: #dcdcaa">getType</span>(<span style="color: #9cdcfe">nextRenderedElement</span>);</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_instantiateReactComponent</span>(<span style="color: #9cdcfe">nextRenderedElement</span>);</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextMarkup</span> = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">mountComponent</span>(<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span>, <span style="color: #9cdcfe">transaction</span>, </div><div><span style="color: #569cd6">        this</span>.<span style="color: #9cdcfe">_nativeParent</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_nativeContainerInfo</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processChildContext</span>(<span style="color: #9cdcfe">context</span>));</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_replaceNodeWithMarkup</span>(<span style="color: #9cdcfe">oldNativeNode</span>, <span style="color: #9cdcfe">nextMarkup</span>);</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="12" y="2699" fill="#000000" font-family="Helvetica" font-size="12px">_updateRenderedComponent: function (transaction, context) {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>