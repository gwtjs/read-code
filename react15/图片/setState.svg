<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1981px" height="2891px" viewBox="-0.5 -0.5 1981 2891" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-19T10:12:04.124Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot; etag=&quot;GmNjID1Yc8Ij-k5PZuwF&quot; version=&quot;14.1.8&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;IIiUVPoJaDH913n7NWob&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FsetState.svg"><defs/><g><path d="M 560 120 L 560 163.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 560 168.88 L 556.5 161.88 L 560 163.63 L 563.5 161.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="285" y="0" width="550" height="120" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 60px; margin-left: 287px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">ReactComponent</span>.<span style="color: #9cdcfe">prototype</span>.<span style="color: #dcdcaa">setState</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">partialState</span>, <span style="color: #9cdcfe">callback</span>) {</div><div>  <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueSetState</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">partialState</span>);</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callback</span>) {</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueCallback</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">callback</span>, <span style="color: #ce9178">'setState'</span>);</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></foreignObject><text x="287" y="64" fill="#000000" font-family="Helvetica" font-size="12px">ReactComponent.prototype.setState = function (partialState, callback) {...</text></switch></g><path d="M 560 410 L 560 468.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 560 473.88 L 556.5 466.88 L 560 468.63 L 563.5 466.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="180" y="170" width="760" height="240" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 290px; margin-left: 182px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">enqueueSetState</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">partialState</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #ce9178">'setState'</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>      <span style="color: #c586c0">return</span>;</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> || (<span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> = []);</div><div>    <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">partialState</span>);</div><br /><div>    <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>  }</div></div></div></div></div></div></div></div></div></div></foreignObject><text x="182" y="294" fill="#000000" font-family="Helvetica" font-size="12px">enqueueSetState: function (publicInstance, partialState) {...</text></switch></g><path d="M 1020 230 L 946.37 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 941.12 230 L 948.12 226.5 L 946.37 230 L 948.12 233.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1020" y="155" width="580" height="150" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 230px; margin-left: 1022px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">callerName</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #9cdcfe">ReactInstanceMap</span>.<span style="color: #dcdcaa">get</span>(<span style="color: #9cdcfe">publicInstance</span>);</div><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>    <span style="color: #c586c0">return</span> <span style="color: #569cd6">null</span>;</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">internalInstance</span>;</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1022" y="234" fill="#000000" font-family="Helvetica" font-size="12px">function getInternalInstanceReadyForUpdate(publicInstance, callerName) {...</text></switch></g><path d="M 850 515 L 930 515 L 1003.63 514.54" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1008.88 514.51 L 1001.9 518.05 L 1003.63 514.54 L 1001.86 511.05 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="270" y="475" width="580" height="80" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 272px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>) {</div><div>  <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="272" y="519" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(internalInstance) {...</text></switch></g><path d="M 1320 669.5 L 1320 713.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1320 718.88 L 1316.5 711.88 L 1320 713.63 L 1323.5 711.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1010" y="359.5" width="620" height="310" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 1012px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">component</span>) {</div><div>  <span style="color: #dcdcaa">ensureInjected</span>();</div><br /><div>  <span style="color: #6a9955">// Various parts of our code (such as ReactCompositeComponent's</span></div><div>  <span style="color: #6a9955">// _renderValidatedComponent) assume that calls to render aren't nested;</span></div><div>  <span style="color: #6a9955">// verify that that's the case. (This is called by each top-level update</span></div><div>  <span style="color: #6a9955">// function, like setProps, setState, forceUpdate, etc.; creation and</span></div><div>  <span style="color: #6a9955">// destruction of top-level components is guarded in ReactMount.)</span></div><br /><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span>) {</div><div>    <span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #dcdcaa">batchedUpdates</span>(<span style="color: #dcdcaa">enqueueUpdate</span>, <span style="color: #9cdcfe">component</span>);</div><div>    <span style="color: #c586c0">return</span>;</div><div>  }</div><br /><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">component</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1012" y="518" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(component) {...</text></switch></g><path d="M 1010 825 L 868.87 825" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 863.62 825 L 870.62 821.5 L 868.87 825 L 870.62 828.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1010" y="720" width="620" height="210" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 1012px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">RESET_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #dcdcaa">close</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> () {</div><div>    <span style="color: #9cdcfe">ReactDefaultBatchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span> = <span style="color: #569cd6">false</span>;</div><div>  }</div><div>};</div><br /><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">FLUSH_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #9cdcfe">close</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">flushBatchedUpdates</span>.<span style="color: #dcdcaa">bind</span>(<span style="color: #9cdcfe">ReactUpdates</span>)</div><div>};</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1012" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var RESET_BATCHED_UPDATES = {...</text></switch></g><path d="M 597.5 995 L 597.5 1015 L 597.5 1010 L 597.5 1023.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 597.5 1028.88 L 594 1021.88 L 597.5 1023.63 L 601 1021.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="332.5" y="655" width="530" height="340" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 335px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #dcdcaa">flushBatchedUpdates</span> = <span style="color: #569cd6">function</span> () {</div><div>  <span style="color: rgb(197 , 134 , 192)">while</span> (<span style="color: rgb(156 , 220 , 254)">dirtyComponents</span>.<span style="color: rgb(156 , 220 , 254)">length</span> || <span style="color: rgb(156 , 220 , 254)">asapEnqueued</span>) {</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #9cdcfe">length</span>) {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">transaction</span> = <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">perform</span>(<span style="color: #dcdcaa">runBatchedUpdates</span>, <span style="color: #569cd6">null</span>, <span style="color: #9cdcfe">transaction</span>);</div><div>      <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">transaction</span>);</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">asapEnqueued</span>) {</div><div>      <span style="color: #9cdcfe">asapEnqueued</span> = <span style="color: #569cd6">false</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">asapCallbackQueue</span>;</div><div>      <span style="color: #9cdcfe">asapCallbackQueue</span> = <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">notifyAll</span>();</div><div>      <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">queue</span>);</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="335" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var flushBatchedUpdates = function () {...</text></switch></g><path d="M 955 1162.5 L 1035 1162.5 L 1035 1110 L 1108.63 1110" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1113.88 1110 L 1106.88 1113.5 L 1108.63 1110 L 1106.88 1106.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="240" y="1030" width="715" height="530" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1295px; margin-left: 242px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">runBatchedUpdates</span>(<span style="color: #9cdcfe">transaction</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">len</span> = <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">dirtyComponentsLength</span>;</div><div>  <span style="color: #6a9955">// Since reconciling a component higher in the owner hierarchy usually (not</span></div><div>  <span style="color: #6a9955">// always -- see shouldComponentUpdate()) will reconcile children, reconcile</span></div><div>  <span style="color: #6a9955">// them before their children by sorting the array.</span></div><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">sort</span>(<span style="color: #dcdcaa">mountOrderComparator</span>);</div><br /><div>  <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">len</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>    <span style="color: #6a9955">// If a component is unmounted before pending changes apply, it will still</span></div><div>    <span style="color: #6a9955">// be here, but we assume that it has cleared its _pendingCallbacks and</span></div><div>    <span style="color: #6a9955">// that performUpdateIfNecessary is a noop.</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">component</span> = <span style="color: #9cdcfe">dirtyComponents</span>[<span style="color: #9cdcfe">i</span>];</div><br /><div>    <span style="color: #6a9955">// If performUpdateIfNecessary happens to enqueue any new updates, we</span></div><div>    <span style="color: #6a9955">// shouldn't execute the callbacks until the next render happens, so</span></div><div>    <span style="color: #6a9955">// stash the callbacks first</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">callbacks</span> = <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span>;</div><div>    <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span> = <span style="color: #569cd6">null</span>;<br /></div><br /><div>    <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">performUpdateIfNecessary</span>(<span style="color: #9cdcfe">component</span>, <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">reconcileTransaction</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callbacks</span>) {</div><div>      <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">j</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">j</span> &lt; <span style="color: #9cdcfe">callbacks</span>.<span style="color: #9cdcfe">length</span>; <span style="color: #9cdcfe">j</span>++) {</div><div>        <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">callbackQueue</span>.<span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">callbacks</span>[<span style="color: #9cdcfe">j</span>], <span style="color: #9cdcfe">component</span>.<span style="color: #dcdcaa">getPublicInstance</span>());</div><div>      }</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="242" y="1299" fill="#000000" font-family="Helvetica" font-size="12px">function runBatchedUpdates(transaction) {...</text></switch></g><path d="M 1430 1170 L 1430 1213.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1430 1218.88 L 1426.5 1211.88 L 1430 1213.63 L 1433.5 1211.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1115" y="1050" width="630" height="120" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1110px; margin-left: 1117px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">performUpdateIfNecessary</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">transaction</span>) {</div><div>    <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #dcdcaa">performUpdateIfNecessary</span>(<span style="color: #9cdcfe">transaction</span>);</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">process</span>.<span style="color: #9cdcfe">env</span>.<span style="color: #4fc1ff">NODE_ENV</span> !== <span style="color: #ce9178">'production'</span>) {</div><div>      <span style="color: #9cdcfe">ReactInstrumentation</span>.<span style="color: #9cdcfe">debugTool</span>.<span style="color: #dcdcaa">onUpdateComponent</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1117" y="1114" fill="#000000" font-family="Helvetica" font-size="12px">performUpdateIfNecessary: function (internalInstance, transaction) {...</text></switch></g><path d="M 1430 1390 L 1430 1447.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1430 1452.88 L 1426.5 1445.88 L 1430 1447.63 L 1433.5 1445.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 990 1305 L 970 1305 L 970 1812.5 L 961.37 1812.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 956.12 1812.5 L 963.12 1809 L 961.37 1812.5 L 963.12 1816 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="990" y="1220" width="880" height="170" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1305px; margin-left: 992px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">performUpdateIfNecessary</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>) {</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingElement</span> != <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #569cd6">this</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>);</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> !== <span style="color: #569cd6">null</span> || <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingForceUpdate</span>) {</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #4ec9b0">updateComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="992" y="1309" fill="#000000" font-family="Helvetica" font-size="12px">performUpdateIfNecessary: function (transaction) {...</text></switch></g><path d="M 955 2237.5 L 987.5 2237.5 L 987.5 2370 L 1013.63 2370" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1018.88 2370 L 1011.88 2373.5 L 1013.63 2370 L 1011.88 2366.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="1600" width="955" height="850" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2025px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">updateComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">prevParentElement</span>, <span style="color: #9cdcfe">nextParentElement</span>, <span style="color: #9cdcfe">prevUnmaskedContext</span>, <span style="color: #9cdcfe">nextUnmaskedContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">inst</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_instance</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">willReceive</span> = <span style="color: #569cd6">false</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextContext</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextProps</span>;</div><br /><div>    <span style="color: #6a9955">// Determine if the context has changed or not</span></div><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> === <span style="color: #9cdcfe">nextUnmaskedContext</span>) {</div><div>      <span style="color: #9cdcfe">nextContext</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span>;</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #9cdcfe">nextContext</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processContext</span>(<span style="color: #9cdcfe">nextUnmaskedContext</span>);</div><div>      <span style="color: #9cdcfe">willReceive</span> = <span style="color: #569cd6">true</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">prevParentElement</span> === <span style="color: #9cdcfe">nextParentElement</span>) {</div><div>      <span style="color: #9cdcfe">nextProps</span> = <span style="color: #9cdcfe">nextParentElement</span>.<span style="color: #9cdcfe">props</span>;</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #9cdcfe">nextProps</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processProps</span>(<span style="color: #9cdcfe">nextParentElement</span>.<span style="color: #9cdcfe">props</span>);</div><div>      <span style="color: #9cdcfe">willReceive</span> = <span style="color: #569cd6">true</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">willReceive</span> &amp;&amp; <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentWillReceiveProps</span>) {</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">componentWillReceiveProps</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextState</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processPendingState</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextContext</span>);</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">shouldUpdate</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingForceUpdate</span> || !<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">shouldComponentUpdate</span> </div><div>      || <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">shouldComponentUpdate</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">shouldUpdate</span>) {</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingForceUpdate</span> = <span style="color: #569cd6">false</span>;</div><div>      <span style="color: #6a9955">// Will set `this.props`, `this.state` and `this.context`.</span></div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_performComponentUpdate</span>(<span style="color: #9cdcfe">nextParentElement</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">nextUnmaskedContext</span>);</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #6a9955">// If it's determined that a component should not update, we still want</span></div><div>      <span style="color: #6a9955">// to set props and state but we shortcut the rest of the update.</span></div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span> = <span style="color: #9cdcfe">nextParentElement</span>;</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> = <span style="color: #9cdcfe">nextUnmaskedContext</span>;</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span> = <span style="color: #9cdcfe">nextProps</span>;</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span> = <span style="color: #9cdcfe">nextState</span>;</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span> = <span style="color: #9cdcfe">nextContext</span>;</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2" y="2029" fill="#000000" font-family="Helvetica" font-size="12px">updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {...</text></switch></g><path d="M 1430 1834 L 1430 1873.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1430 1878.88 L 1426.5 1871.88 L 1430 1873.63 L 1433.5 1871.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1020" y="1454" width="820" height="380" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1644px; margin-left: 1022px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">receiveComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevElement</span> = <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">nextElement</span> === <span style="color: #9cdcfe">prevElement</span> &amp;&amp; <span style="color: #9cdcfe">context</span> === <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_context</span>) {</div><div>      <span style="color: #c586c0">return</span>;</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">refsChanged</span> = <span style="color: #9cdcfe">ReactRef</span>.<span style="color: #dcdcaa">shouldUpdateRefs</span>(<span style="color: #9cdcfe">prevElement</span>, <span style="color: #9cdcfe">nextElement</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">refsChanged</span>) {</div><div>      <span style="color: #9cdcfe">ReactRef</span>.<span style="color: #dcdcaa">detachRefs</span>(<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">prevElement</span>);</div><div>    }</div><br /><div>    <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">refsChanged</span> &amp;&amp; <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_currentElement</span> &amp;&amp; <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_currentElement</span>.<span style="color: #9cdcfe">ref</span> != <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">getReactMountReady</span>().<span style="color: #dcdcaa">enqueue</span>(<span style="color: #dcdcaa">attachRefs</span>, <span style="color: #9cdcfe">internalInstance</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1022" y="1648" fill="#000000" font-family="Helvetica" font-size="12px">receiveComponent: function (internalInstance, nextElement, transaction, context) {...</text></switch></g><path d="M 1060 1960 L 1007.5 1960 L 1007.5 1812.5 L 961.37 1812.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 956.12 1812.5 L 963.12 1809 L 961.37 1812.5 L 963.12 1816 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1060" y="1880" width="740" height="160" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1960px; margin-left: 1062px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">receiveComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">nextContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevElement</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevContext</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingElement</span> = <span style="color: #569cd6">null</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">updateComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">prevElement</span>, <span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">prevContext</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1062" y="1964" fill="#000000" font-family="Helvetica" font-size="12px">receiveComponent: function (nextElement, transaction, nextContext) {...</text></switch></g><path d="M 1020 2510 L 987.5 2510 L 987.5 2695 L 961.37 2695" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 956.12 2695 L 963.12 2691.5 L 961.37 2695 L 963.12 2698.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1020" y="2090" width="960" height="560" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2370px; margin-left: 1022px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">_performComponentUpdate</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">unmaskedContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">inst</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_instance</span>;</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">hasComponentDidUpdate</span> = <span style="color: #4ec9b0">Boolean</span>(<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentDidUpdate</span>);</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevProps</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevState</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevContext</span>;</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">hasComponentDidUpdate</span>) {</div><div>      <span style="color: #9cdcfe">prevProps</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span>;</div><div>      <span style="color: #9cdcfe">prevState</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span>;</div><div>      <span style="color: #9cdcfe">prevContext</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentWillUpdate</span>) {</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">componentWillUpdate</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>    }</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span> = <span style="color: #9cdcfe">nextElement</span>;</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> = <span style="color: #9cdcfe">unmaskedContext</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span> = <span style="color: #9cdcfe">nextProps</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span> = <span style="color: #9cdcfe">nextState</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span> = <span style="color: #9cdcfe">nextContext</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_updateRenderedComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">unmaskedContext</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">hasComponentDidUpdate</span>) {</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">getReactMountReady</span>().<span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentDidUpdate</span>.<span style="color: #dcdcaa">bind</span>(<span style="color: #9cdcfe">inst</span>, <span style="color: #9cdcfe">prevProps</span>, <span style="color: #9cdcfe">prevState</span>, <span style="color: #9cdcfe">prevContext</span>), <span style="color: #9cdcfe">inst</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1022" y="2374" fill="#000000" font-family="Helvetica" font-size="12px">_performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {...</text></switch></g><rect x="10" y="2500" width="945" height="390" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2695px; margin-left: 12px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">_updateRenderedComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevComponentInstance</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevRenderedElement</span> = <span style="color: #9cdcfe">prevComponentInstance</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextRenderedElement</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_renderValidatedComponent</span>();</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #dcdcaa">shouldUpdateReactComponent</span>(<span style="color: #9cdcfe">prevRenderedElement</span>, <span style="color: #9cdcfe">nextRenderedElement</span>)) {</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #9cdcfe">prevComponentInstance</span>, <span style="color: #9cdcfe">nextRenderedElement</span>, </div><div><span style="color: #9cdcfe">        transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processChildContext</span>(<span style="color: #9cdcfe">context</span>));</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">oldNativeNode</span> = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">getNativeNode</span>(<span style="color: #9cdcfe">prevComponentInstance</span>);</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">unmountComponent</span>(<span style="color: #9cdcfe">prevComponentInstance</span>, <span style="color: #569cd6">false</span>);</div><br /><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedNodeType</span> = <span style="color: #9cdcfe">ReactNodeTypes</span>.<span style="color: #dcdcaa">getType</span>(<span style="color: #9cdcfe">nextRenderedElement</span>);</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_instantiateReactComponent</span>(<span style="color: #9cdcfe">nextRenderedElement</span>);</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextMarkup</span> = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">mountComponent</span>(<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span>, <span style="color: #9cdcfe">transaction</span>, </div><div><span style="color: #569cd6">        this</span>.<span style="color: #9cdcfe">_nativeParent</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_nativeContainerInfo</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processChildContext</span>(<span style="color: #9cdcfe">context</span>));</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_replaceNodeWithMarkup</span>(<span style="color: #9cdcfe">oldNativeNode</span>, <span style="color: #9cdcfe">nextMarkup</span>);</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="12" y="2699" fill="#000000" font-family="Helvetica" font-size="12px">_updateRenderedComponent: function (transaction, context) {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>