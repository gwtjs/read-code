<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1451px" height="1562px" viewBox="-0.5 -0.5 1451 1562" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-15T10:35:40.916Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36&quot; etag=&quot;jf2r0kBZWbSRh8A1R6S0&quot; version=&quot;14.1.8&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;IIiUVPoJaDH913n7NWob&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FsetState.svg"><defs/><g><path d="M 275 120 L 275 145 L 380 145 L 380 163.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 380 168.88 L 376.5 161.88 L 380 163.63 L 383.5 161.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="0" width="550" height="120" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 60px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">ReactComponent</span>.<span style="color: #9cdcfe">prototype</span>.<span style="color: #dcdcaa">setState</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">partialState</span>, <span style="color: #9cdcfe">callback</span>) {</div><div>  <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueSetState</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">partialState</span>);</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callback</span>) {</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueCallback</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">callback</span>, <span style="color: #ce9178">'setState'</span>);</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></foreignObject><text x="2" y="64" fill="#000000" font-family="Helvetica" font-size="12px">ReactComponent.prototype.setState = function (partialState, callback) {...</text></switch></g><path d="M 380 410 L 380 442.3 L 290 442.3 L 290 468.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 290 473.38 L 286.5 466.38 L 290 468.13 L 293.5 466.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="170" width="760" height="240" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 290px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">enqueueSetState</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">partialState</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #ce9178">'setState'</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>      <span style="color: #c586c0">return</span>;</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> || (<span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> = []);</div><div>    <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">partialState</span>);</div><br /><div>    <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>  }</div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2" y="294" fill="#000000" font-family="Helvetica" font-size="12px">enqueueSetState: function (publicInstance, partialState) {...</text></switch></g><path d="M 840 230 L 766.37 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 761.12 230 L 768.12 226.5 L 766.37 230 L 768.12 233.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="840" y="155" width="580" height="150" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 230px; margin-left: 842px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">callerName</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #9cdcfe">ReactInstanceMap</span>.<span style="color: #dcdcaa">get</span>(<span style="color: #9cdcfe">publicInstance</span>);</div><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>    <span style="color: #c586c0">return</span> <span style="color: #569cd6">null</span>;</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">internalInstance</span>;</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="842" y="234" fill="#000000" font-family="Helvetica" font-size="12px">function getInternalInstanceReadyForUpdate(publicInstance, callerName) {...</text></switch></g><path d="M 580 514.5 L 823.63 514.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 828.88 514.5 L 821.88 518 L 823.63 514.5 L 821.88 511 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="474.5" width="580" height="80" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>) {</div><div>  <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2" y="518" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(internalInstance) {...</text></switch></g><path d="M 1140 669.5 L 1140 713.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1140 718.88 L 1136.5 711.88 L 1140 713.63 L 1143.5 711.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="830" y="359.5" width="620" height="310" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 832px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">component</span>) {</div><div>  <span style="color: #dcdcaa">ensureInjected</span>();</div><br /><div>  <span style="color: #6a9955">// Various parts of our code (such as ReactCompositeComponent's</span></div><div>  <span style="color: #6a9955">// _renderValidatedComponent) assume that calls to render aren't nested;</span></div><div>  <span style="color: #6a9955">// verify that that's the case. (This is called by each top-level update</span></div><div>  <span style="color: #6a9955">// function, like setProps, setState, forceUpdate, etc.; creation and</span></div><div>  <span style="color: #6a9955">// destruction of top-level components is guarded in ReactMount.)</span></div><br /><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span>) {</div><div>    <span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #dcdcaa">batchedUpdates</span>(<span style="color: #dcdcaa">enqueueUpdate</span>, <span style="color: #9cdcfe">component</span>);</div><div>    <span style="color: #c586c0">return</span>;</div><div>  }</div><br /><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">component</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="832" y="518" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(component) {...</text></switch></g><path d="M 830 825 L 726.37 825" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 721.12 825 L 728.12 821.5 L 726.37 825 L 728.12 828.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="830" y="720" width="620" height="210" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 832px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">RESET_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #dcdcaa">close</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> () {</div><div>    <span style="color: #9cdcfe">ReactDefaultBatchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span> = <span style="color: #569cd6">false</span>;</div><div>  }</div><div>};</div><br /><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">FLUSH_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #9cdcfe">close</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">flushBatchedUpdates</span>.<span style="color: #dcdcaa">bind</span>(<span style="color: #9cdcfe">ReactUpdates</span>)</div><div>};</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="832" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var RESET_BATCHED_UPDATES = {...</text></switch></g><rect x="190" y="655" width="530" height="340" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 192px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #dcdcaa">flushBatchedUpdates</span> = <span style="color: #569cd6">function</span> () {</div><div>  <span style="color: rgb(197 , 134 , 192)">while</span> (<span style="color: rgb(156 , 220 , 254)">dirtyComponents</span>.<span style="color: rgb(156 , 220 , 254)">length</span> || <span style="color: rgb(156 , 220 , 254)">asapEnqueued</span>) {</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #9cdcfe">length</span>) {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">transaction</span> = <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">perform</span>(<span style="color: #dcdcaa">runBatchedUpdates</span>, <span style="color: #569cd6">null</span>, <span style="color: #9cdcfe">transaction</span>);</div><div>      <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">transaction</span>);</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">asapEnqueued</span>) {</div><div>      <span style="color: #9cdcfe">asapEnqueued</span> = <span style="color: #569cd6">false</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">asapCallbackQueue</span>;</div><div>      <span style="color: #9cdcfe">asapCallbackQueue</span> = <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">notifyAll</span>();</div><div>      <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">queue</span>);</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="192" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var flushBatchedUpdates = function () {...</text></switch></g><rect x="60" y="1030" width="715" height="530" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1295px; margin-left: 62px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">runBatchedUpdates</span>(<span style="color: #9cdcfe">transaction</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">len</span> = <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">dirtyComponentsLength</span>;</div><div>  <span style="color: #6a9955">// Since reconciling a component higher in the owner hierarchy usually (not</span></div><div>  <span style="color: #6a9955">// always -- see shouldComponentUpdate()) will reconcile children, reconcile</span></div><div>  <span style="color: #6a9955">// them before their children by sorting the array.</span></div><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">sort</span>(<span style="color: #dcdcaa">mountOrderComparator</span>);</div><br /><div>  <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">len</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>    <span style="color: #6a9955">// If a component is unmounted before pending changes apply, it will still</span></div><div>    <span style="color: #6a9955">// be here, but we assume that it has cleared its _pendingCallbacks and</span></div><div>    <span style="color: #6a9955">// that performUpdateIfNecessary is a noop.</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">component</span> = <span style="color: #9cdcfe">dirtyComponents</span>[<span style="color: #9cdcfe">i</span>];</div><br /><div>    <span style="color: #6a9955">// If performUpdateIfNecessary happens to enqueue any new updates, we</span></div><div>    <span style="color: #6a9955">// shouldn't execute the callbacks until the next render happens, so</span></div><div>    <span style="color: #6a9955">// stash the callbacks first</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">callbacks</span> = <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span>;</div><div>    <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span> = <span style="color: #569cd6">null</span>;<br /></div><br /><div>    <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">performUpdateIfNecessary</span>(<span style="color: #9cdcfe">component</span>, <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">reconcileTransaction</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callbacks</span>) {</div><div>      <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">j</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">j</span> &lt; <span style="color: #9cdcfe">callbacks</span>.<span style="color: #9cdcfe">length</span>; <span style="color: #9cdcfe">j</span>++) {</div><div>        <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">callbackQueue</span>.<span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">callbacks</span>[<span style="color: #9cdcfe">j</span>], <span style="color: #9cdcfe">component</span>.<span style="color: #dcdcaa">getPublicInstance</span>());</div><div>      }</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="62" y="1299" fill="#000000" font-family="Helvetica" font-size="12px">function runBatchedUpdates(transaction) {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>