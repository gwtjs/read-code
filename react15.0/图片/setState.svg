<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3039px" height="4141px" viewBox="-0.5 -0.5 3039 4141" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-01-22T07:57:17.149Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36&quot; etag=&quot;D6XfS32pa0nqOVvepf0R&quot; version=&quot;14.2.6&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;IIiUVPoJaDH913n7NWob&quot; name=&quot;第 1 页&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/?src=about#Hgwtjs%2Fread-code%2Fmaster%2Freact15%2F%E5%9B%BE%E7%89%87%2FsetState.svg"><defs/><g><path d="M 560 120 L 560 163.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 560 168.88 L 556.5 161.88 L 560 163.63 L 563.5 161.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="285" y="0" width="550" height="120" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 60px; margin-left: 287px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">ReactComponent</span>.<span style="color: #9cdcfe">prototype</span>.<span style="color: #dcdcaa">setState</span> = <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">partialState</span>, <span style="color: #9cdcfe">callback</span>) {</div><div>  <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueSetState</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">partialState</span>);</div><div>  <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callback</span>) {</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">updater</span>.<span style="color: #dcdcaa">enqueueCallback</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">callback</span>, <span style="color: #ce9178">'setState'</span>);</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></foreignObject><text x="287" y="64" fill="#000000" font-family="Helvetica" font-size="12px">ReactComponent.prototype.setState = function (partialState, callback) {...</text></switch></g><path d="M 560 410 L 560 468.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 560 473.88 L 556.5 466.88 L 560 468.63 L 563.5 466.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="180" y="170" width="760" height="240" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 290px; margin-left: 182px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">enqueueSetState</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">partialState</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #ce9178">'setState'</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>      <span style="color: #c586c0">return</span>;</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> || (<span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> = []);</div><div>    <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">partialState</span>);</div><br /><div>    <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>  }</div></div></div></div></div></div></div></div></div></div></foreignObject><text x="182" y="294" fill="#000000" font-family="Helvetica" font-size="12px">enqueueSetState: function (publicInstance, partialState) {...</text></switch></g><path d="M 1020 230 L 946.37 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 941.12 230 L 948.12 226.5 L 946.37 230 L 948.12 233.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1020" y="155" width="580" height="150" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 230px; margin-left: 1022px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">getInternalInstanceReadyForUpdate</span>(<span style="color: #9cdcfe">publicInstance</span>, <span style="color: #9cdcfe">callerName</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">internalInstance</span> = <span style="color: #9cdcfe">ReactInstanceMap</span>.<span style="color: #dcdcaa">get</span>(<span style="color: #9cdcfe">publicInstance</span>);</div><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">internalInstance</span>) {</div><div>    <span style="color: #c586c0">return</span> <span style="color: #569cd6">null</span>;</div><div>  }</div><div>  <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">internalInstance</span>;</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1022" y="234" fill="#000000" font-family="Helvetica" font-size="12px">function getInternalInstanceReadyForUpdate(publicInstance, callerName) {...</text></switch></g><path d="M 850 515 L 930 515 L 1003.63 514.54" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1008.88 514.51 L 1001.9 518.05 L 1003.63 514.54 L 1001.86 511.05 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="270" y="475" width="580" height="80" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 272px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>) {</div><div>  <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="272" y="519" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(internalInstance) {...</text></switch></g><path d="M 1320 669.5 L 1320 713.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1320 718.88 L 1316.5 711.88 L 1320 713.63 L 1323.5 711.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1010" y="359.5" width="620" height="310" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 515px; margin-left: 1012px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">enqueueUpdate</span>(<span style="color: #9cdcfe">component</span>) {</div><div>  <span style="color: #dcdcaa">ensureInjected</span>();</div><br /><div>  <span style="color: #6a9955">// Various parts of our code (such as ReactCompositeComponent's</span></div><div>  <span style="color: #6a9955">// _renderValidatedComponent) assume that calls to render aren't nested;</span></div><div>  <span style="color: #6a9955">// verify that that's the case. (This is called by each top-level update</span></div><div>  <span style="color: #6a9955">// function, like setProps, setState, forceUpdate, etc.; creation and</span></div><div>  <span style="color: #6a9955">// destruction of top-level components is guarded in ReactMount.)</span></div><br /><div>  <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span>) {</div><div>    <span style="color: #9cdcfe">batchingStrategy</span>.<span style="color: #dcdcaa">batchedUpdates</span>(<span style="color: #dcdcaa">enqueueUpdate</span>, <span style="color: #9cdcfe">component</span>);</div><div>    <span style="color: #c586c0">return</span>;</div><div>  }</div><br /><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">push</span>(<span style="color: #9cdcfe">component</span>);</div><div>}</div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1012" y="518" fill="#000000" font-family="Helvetica" font-size="12px">function enqueueUpdate(component) {...</text></switch></g><path d="M 1010 825 L 868.87 825" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 863.62 825 L 870.62 821.5 L 868.87 825 L 870.62 828.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1010" y="720" width="620" height="210" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 1012px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">RESET_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #dcdcaa">close</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> () {</div><div>    <span style="color: #9cdcfe">ReactDefaultBatchingStrategy</span>.<span style="color: #9cdcfe">isBatchingUpdates</span> = <span style="color: #569cd6">false</span>;</div><div>  }</div><div>};</div><br /><div><span style="color: #569cd6">var</span> <span style="color: #9cdcfe">FLUSH_BATCHED_UPDATES</span> = {</div><div>  <span style="color: #9cdcfe">initialize</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">emptyFunction</span>,</div><div>  <span style="color: #9cdcfe">close</span><span style="color: #9cdcfe">:</span> <span style="color: #9cdcfe">ReactUpdates</span>.<span style="color: #dcdcaa">flushBatchedUpdates</span>.<span style="color: #dcdcaa">bind</span>(<span style="color: #9cdcfe">ReactUpdates</span>)</div><div>};</div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1012" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var RESET_BATCHED_UPDATES = {...</text></switch></g><path d="M 597.5 995 L 597.5 1015 L 597.5 1010 L 597.5 1023.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 597.5 1028.88 L 594 1021.88 L 597.5 1023.63 L 601 1021.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="332.5" y="655" width="530" height="340" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 825px; margin-left: 335px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">var</span> <span style="color: #dcdcaa">flushBatchedUpdates</span> = <span style="color: #569cd6">function</span> () {</div><div>  <span style="color: rgb(197 , 134 , 192)">while</span> (<span style="color: rgb(156 , 220 , 254)">dirtyComponents</span>.<span style="color: rgb(156 , 220 , 254)">length</span> || <span style="color: rgb(156 , 220 , 254)">asapEnqueued</span>) {</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #9cdcfe">length</span>) {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">transaction</span> = <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">perform</span>(<span style="color: #dcdcaa">runBatchedUpdates</span>, <span style="color: #569cd6">null</span>, <span style="color: #9cdcfe">transaction</span>);</div><div>      <span style="color: #4ec9b0">ReactUpdatesFlushTransaction</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">transaction</span>);</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">asapEnqueued</span>) {</div><div>      <span style="color: #9cdcfe">asapEnqueued</span> = <span style="color: #569cd6">false</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">queue</span> = <span style="color: #9cdcfe">asapCallbackQueue</span>;</div><div>      <span style="color: #9cdcfe">asapCallbackQueue</span> = <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">getPooled</span>();</div><div>      <span style="color: #9cdcfe">queue</span>.<span style="color: #dcdcaa">notifyAll</span>();</div><div>      <span style="color: #4ec9b0">CallbackQueue</span>.<span style="color: #dcdcaa">release</span>(<span style="color: #9cdcfe">queue</span>);</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="335" y="829" fill="#000000" font-family="Helvetica" font-size="12px">var flushBatchedUpdates = function () {...</text></switch></g><path d="M 955 1162.5 L 1035 1162.5 L 1035 1110 L 1108.63 1110" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1113.88 1110 L 1106.88 1113.5 L 1108.63 1110 L 1106.88 1106.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="240" y="1030" width="715" height="530" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1295px; margin-left: 242px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #569cd6">function</span> <span style="color: #dcdcaa">runBatchedUpdates</span>(<span style="color: #9cdcfe">transaction</span>) {</div><div>  <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">len</span> = <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">dirtyComponentsLength</span>;</div><div>  <span style="color: #6a9955">// Since reconciling a component higher in the owner hierarchy usually (not</span></div><div>  <span style="color: #6a9955">// always -- see shouldComponentUpdate()) will reconcile children, reconcile</span></div><div>  <span style="color: #6a9955">// them before their children by sorting the array.</span></div><div>  <span style="color: #9cdcfe">dirtyComponents</span>.<span style="color: #dcdcaa">sort</span>(<span style="color: #dcdcaa">mountOrderComparator</span>);</div><br /><div>  <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">i</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">i</span> &lt; <span style="color: #9cdcfe">len</span>; <span style="color: #9cdcfe">i</span>++) {</div><div>    <span style="color: #6a9955">// If a component is unmounted before pending changes apply, it will still</span></div><div>    <span style="color: #6a9955">// be here, but we assume that it has cleared its _pendingCallbacks and</span></div><div>    <span style="color: #6a9955">// that performUpdateIfNecessary is a noop.</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">component</span> = <span style="color: #9cdcfe">dirtyComponents</span>[<span style="color: #9cdcfe">i</span>];</div><br /><div>    <span style="color: #6a9955">// If performUpdateIfNecessary happens to enqueue any new updates, we</span></div><div>    <span style="color: #6a9955">// shouldn't execute the callbacks until the next render happens, so</span></div><div>    <span style="color: #6a9955">// stash the callbacks first</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">callbacks</span> = <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span>;</div><div>    <span style="color: #9cdcfe">component</span>.<span style="color: #9cdcfe">_pendingCallbacks</span> = <span style="color: #569cd6">null</span>;<br /></div><br /><div>    <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">performUpdateIfNecessary</span>(<span style="color: #9cdcfe">component</span>, <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">reconcileTransaction</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">callbacks</span>) {</div><div>      <span style="color: #c586c0">for</span> (<span style="color: #569cd6">var</span> <span style="color: #9cdcfe">j</span> = <span style="color: #b5cea8">0</span>; <span style="color: #9cdcfe">j</span> &lt; <span style="color: #9cdcfe">callbacks</span>.<span style="color: #9cdcfe">length</span>; <span style="color: #9cdcfe">j</span>++) {</div><div>        <span style="color: #9cdcfe">transaction</span>.<span style="color: #9cdcfe">callbackQueue</span>.<span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">callbacks</span>[<span style="color: #9cdcfe">j</span>], <span style="color: #9cdcfe">component</span>.<span style="color: #dcdcaa">getPublicInstance</span>());</div><div>      }</div><div>    }</div><div>  }</div><div>}</div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="242" y="1299" fill="#000000" font-family="Helvetica" font-size="12px">function runBatchedUpdates(transaction) {...</text></switch></g><path d="M 1430 1170 L 1430 1213.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1430 1218.88 L 1426.5 1211.88 L 1430 1213.63 L 1433.5 1211.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1115" y="1050" width="630" height="120" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1110px; margin-left: 1117px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">performUpdateIfNecessary</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">transaction</span>) {</div><div>    <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #dcdcaa">performUpdateIfNecessary</span>(<span style="color: #9cdcfe">transaction</span>);</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">process</span>.<span style="color: #9cdcfe">env</span>.<span style="color: #4fc1ff">NODE_ENV</span> !== <span style="color: #ce9178">'production'</span>) {</div><div>      <span style="color: #9cdcfe">ReactInstrumentation</span>.<span style="color: #9cdcfe">debugTool</span>.<span style="color: #dcdcaa">onUpdateComponent</span>(<span style="color: #9cdcfe">internalInstance</span>);</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1117" y="1114" fill="#000000" font-family="Helvetica" font-size="12px">performUpdateIfNecessary: function (internalInstance, transaction) {...</text></switch></g><path d="M 1430 1390 L 1430 1447.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1430 1452.88 L 1426.5 1445.88 L 1430 1447.63 L 1433.5 1445.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 990 1305 L 970 1305 L 970 1812.5 L 961.37 1812.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 956.12 1812.5 L 963.12 1809 L 961.37 1812.5 L 963.12 1816 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="990" y="1220" width="880" height="170" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1305px; margin-left: 992px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">performUpdateIfNecessary</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>) {</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingElement</span> != <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #569cd6">this</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>);</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingStateQueue</span> !== <span style="color: #569cd6">null</span> || <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingForceUpdate</span>) {</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #4ec9b0">updateComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="992" y="1309" fill="#000000" font-family="Helvetica" font-size="12px">performUpdateIfNecessary: function (transaction) {...</text></switch></g><path d="M 955 2237.5 L 987.5 2237.5 L 987.5 2370 L 1013.63 2370" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1018.88 2370 L 1011.88 2373.5 L 1013.63 2370 L 1011.88 2366.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="1600" width="955" height="850" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2025px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">updateComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">prevParentElement</span>, <span style="color: #9cdcfe">nextParentElement</span>, <span style="color: #9cdcfe">prevUnmaskedContext</span>, <span style="color: #9cdcfe">nextUnmaskedContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">inst</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_instance</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">willReceive</span> = <span style="color: #569cd6">false</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextContext</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextProps</span>;</div><br /><div>    <span style="color: #6a9955">// Determine if the context has changed or not</span></div><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> === <span style="color: #9cdcfe">nextUnmaskedContext</span>) {</div><div>      <span style="color: #9cdcfe">nextContext</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span>;</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #9cdcfe">nextContext</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processContext</span>(<span style="color: #9cdcfe">nextUnmaskedContext</span>);</div><div>      <span style="color: #9cdcfe">willReceive</span> = <span style="color: #569cd6">true</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">prevParentElement</span> === <span style="color: #9cdcfe">nextParentElement</span>) {</div><div>      <span style="color: #9cdcfe">nextProps</span> = <span style="color: #9cdcfe">nextParentElement</span>.<span style="color: #9cdcfe">props</span>;</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #9cdcfe">nextProps</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processProps</span>(<span style="color: #9cdcfe">nextParentElement</span>.<span style="color: #9cdcfe">props</span>);</div><div>      <span style="color: #9cdcfe">willReceive</span> = <span style="color: #569cd6">true</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">willReceive</span> &amp;&amp; <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentWillReceiveProps</span>) {</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">componentWillReceiveProps</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextState</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processPendingState</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextContext</span>);</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">shouldUpdate</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingForceUpdate</span> || !<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">shouldComponentUpdate</span> </div><div>      || <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">shouldComponentUpdate</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">shouldUpdate</span>) {</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingForceUpdate</span> = <span style="color: #569cd6">false</span>;</div><div>      <span style="color: #6a9955">// Will set `this.props`, `this.state` and `this.context`.</span></div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_performComponentUpdate</span>(<span style="color: #9cdcfe">nextParentElement</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">nextUnmaskedContext</span>);</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #6a9955">// If it's determined that a component should not update, we still want</span></div><div>      <span style="color: #6a9955">// to set props and state but we shortcut the rest of the update.</span></div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span> = <span style="color: #9cdcfe">nextParentElement</span>;</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> = <span style="color: #9cdcfe">nextUnmaskedContext</span>;</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span> = <span style="color: #9cdcfe">nextProps</span>;</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span> = <span style="color: #9cdcfe">nextState</span>;</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span> = <span style="color: #9cdcfe">nextContext</span>;</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2" y="2029" fill="#000000" font-family="Helvetica" font-size="12px">updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {...</text></switch></g><path d="M 1430 1834 L 1430 1857 L 1360 1857 L 1360 1873.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1360 1878.88 L 1356.5 1871.88 L 1360 1873.63 L 1363.5 1871.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 1430 1834 L 1430 1860 L 2035 1860 L 2035 1883.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2035 1888.88 L 2031.5 1881.88 L 2035 1883.63 L 2038.5 1881.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1020" y="1454" width="820" height="380" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1644px; margin-left: 1022px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">receiveComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevElement</span> = <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">nextElement</span> === <span style="color: #9cdcfe">prevElement</span> &amp;&amp; <span style="color: #9cdcfe">context</span> === <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_context</span>) {</div><div>      <span style="color: #c586c0">return</span>;</div><div>    }</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">refsChanged</span> = <span style="color: #9cdcfe">ReactRef</span>.<span style="color: #dcdcaa">shouldUpdateRefs</span>(<span style="color: #9cdcfe">prevElement</span>, <span style="color: #9cdcfe">nextElement</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">refsChanged</span>) {</div><div>      <span style="color: #9cdcfe">ReactRef</span>.<span style="color: #dcdcaa">detachRefs</span>(<span style="color: #9cdcfe">internalInstance</span>, <span style="color: #9cdcfe">prevElement</span>);</div><div>    }</div><br /><div>    <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">refsChanged</span> &amp;&amp; <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_currentElement</span> &amp;&amp; <span style="color: #9cdcfe">internalInstance</span>.<span style="color: #9cdcfe">_currentElement</span>.<span style="color: #9cdcfe">ref</span> != <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">getReactMountReady</span>().<span style="color: #dcdcaa">enqueue</span>(<span style="color: #dcdcaa">attachRefs</span>, <span style="color: #9cdcfe">internalInstance</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1022" y="1648" fill="#000000" font-family="Helvetica" font-size="12px">receiveComponent: function (internalInstance, nextElement, transaction, context) {...</text></switch></g><path d="M 990 1960 L 970 1960 L 970 1812.5 L 961.37 1812.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 956.12 1812.5 L 963.12 1809 L 961.37 1812.5 L 963.12 1816 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="990" y="1880" width="740" height="160" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1960px; margin-left: 992px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">receiveComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">nextContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevElement</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevContext</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_pendingElement</span> = <span style="color: #569cd6">null</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">updateComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">prevElement</span>, <span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">prevContext</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="992" y="1964" fill="#000000" font-family="Helvetica" font-size="12px">receiveComponent: function (nextElement, transaction, nextContext) {...</text></switch></g><path d="M 1020 2510 L 987.5 2510 L 987.5 2695 L 961.37 2695" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 956.12 2695 L 963.12 2691.5 L 961.37 2695 L 963.12 2698.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1020" y="2090" width="960" height="560" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2370px; margin-left: 1022px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">_performComponentUpdate</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">unmaskedContext</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">inst</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_instance</span>;</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">hasComponentDidUpdate</span> = <span style="color: #4ec9b0">Boolean</span>(<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentDidUpdate</span>);</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevProps</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevState</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevContext</span>;</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">hasComponentDidUpdate</span>) {</div><div>      <span style="color: #9cdcfe">prevProps</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span>;</div><div>      <span style="color: #9cdcfe">prevState</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span>;</div><div>      <span style="color: #9cdcfe">prevContext</span> = <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span>;</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentWillUpdate</span>) {</div><div>      <span style="color: #9cdcfe">inst</span>.<span style="color: #dcdcaa">componentWillUpdate</span>(<span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">nextState</span>, <span style="color: #9cdcfe">nextContext</span>);</div><div>    }</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span> = <span style="color: #9cdcfe">nextElement</span>;</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_context</span> = <span style="color: #9cdcfe">unmaskedContext</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">props</span> = <span style="color: #9cdcfe">nextProps</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">state</span> = <span style="color: #9cdcfe">nextState</span>;</div><div>    <span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">context</span> = <span style="color: #9cdcfe">nextContext</span>;</div><br /><div>    <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_updateRenderedComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">unmaskedContext</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">hasComponentDidUpdate</span>) {</div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">getReactMountReady</span>().<span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">inst</span>.<span style="color: #9cdcfe">componentDidUpdate</span>.<span style="color: #dcdcaa">bind</span>(<span style="color: #9cdcfe">inst</span>, <span style="color: #9cdcfe">prevProps</span>, <span style="color: #9cdcfe">prevState</span>, <span style="color: #9cdcfe">prevContext</span>), <span style="color: #9cdcfe">inst</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1022" y="2374" fill="#000000" font-family="Helvetica" font-size="12px">_performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {...</text></switch></g><rect x="10" y="2500" width="945" height="390" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2695px; margin-left: 12px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">_updateRenderedComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevComponentInstance</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevRenderedElement</span> = <span style="color: #9cdcfe">prevComponentInstance</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextRenderedElement</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_renderValidatedComponent</span>();</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #dcdcaa">shouldUpdateReactComponent</span>(<span style="color: #9cdcfe">prevRenderedElement</span>, <span style="color: #9cdcfe">nextRenderedElement</span>)) {</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #9cdcfe">prevComponentInstance</span>, <span style="color: #9cdcfe">nextRenderedElement</span>, </div><div><span style="color: #9cdcfe">        transaction</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processChildContext</span>(<span style="color: #9cdcfe">context</span>));</div><div>    } <span style="color: #c586c0">else</span> {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">oldNativeNode</span> = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">getNativeNode</span>(<span style="color: #9cdcfe">prevComponentInstance</span>);</div><div>      <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">unmountComponent</span>(<span style="color: #9cdcfe">prevComponentInstance</span>, <span style="color: #569cd6">false</span>);</div><br /><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedNodeType</span> = <span style="color: #9cdcfe">ReactNodeTypes</span>.<span style="color: #dcdcaa">getType</span>(<span style="color: #9cdcfe">nextRenderedElement</span>);</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_instantiateReactComponent</span>(<span style="color: #9cdcfe">nextRenderedElement</span>);</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextMarkup</span> = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">mountComponent</span>(<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedComponent</span>, <span style="color: #9cdcfe">transaction</span>, </div><div><span style="color: #569cd6">        this</span>.<span style="color: #9cdcfe">_nativeParent</span>, <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_nativeContainerInfo</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_processChildContext</span>(<span style="color: #9cdcfe">context</span>));</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_replaceNodeWithMarkup</span>(<span style="color: #9cdcfe">oldNativeNode</span>, <span style="color: #9cdcfe">nextMarkup</span>);</div><div>    }</div><div>  }</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="12" y="2699" fill="#000000" font-family="Helvetica" font-size="12px">_updateRenderedComponent: function (transaction, context) {...</text></switch></g><path d="M 2670 2420 L 2670 2445 L 2435 2445 L 2435 2463.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2435 2468.88 L 2431.5 2461.88 L 2435 2463.63 L 2438.5 2461.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="2360" y="1640" width="620" height="780" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2030px; margin-left: 2362px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">updateComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">prevElement</span>, <span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">lastProps</span> = <span style="color: #9cdcfe">prevElement</span>.<span style="color: #9cdcfe">props</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextProps</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>.<span style="color: #9cdcfe">props</span>;</div><br /><div>    <span style="color: #c586c0">switch</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_tag</span>) {</div><div>      <span style="color: #c586c0">case</span> <span style="color: #ce9178">'button'</span>:</div><div>        <span style="color: #9cdcfe">lastProps</span> = <span style="color: #9cdcfe">ReactDOMButton</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">lastProps</span>);</div><div>        <span style="color: #9cdcfe">nextProps</span> = <span style="color: #9cdcfe">ReactDOMButton</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">nextProps</span>);</div><div>        <span style="color: #c586c0">break</span>;</div><div>      <span style="color: #c586c0">case</span> <span style="color: #ce9178">'input'</span>:</div><div>        <span style="color: #9cdcfe">ReactDOMInput</span>.<span style="color: #dcdcaa">updateWrapper</span>(<span style="color: #569cd6">this</span>);</div><div>        <span style="color: #9cdcfe">lastProps</span> = <span style="color: #9cdcfe">ReactDOMInput</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">lastProps</span>);</div><div>        <span style="color: #9cdcfe">nextProps</span> = <span style="color: #9cdcfe">ReactDOMInput</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">nextProps</span>);</div><div>        <span style="color: #c586c0">break</span>;</div><div>      <span style="color: #c586c0">case</span> <span style="color: #ce9178">'option'</span>:</div><div>        <span style="color: #9cdcfe">lastProps</span> = <span style="color: #9cdcfe">ReactDOMOption</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">lastProps</span>);</div><div>        <span style="color: #9cdcfe">nextProps</span> = <span style="color: #9cdcfe">ReactDOMOption</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">nextProps</span>);</div><div>        <span style="color: #c586c0">break</span>;</div><div>      <span style="color: #c586c0">case</span> <span style="color: #ce9178">'select'</span>:</div><div>        <span style="color: #9cdcfe">lastProps</span> = <span style="color: #9cdcfe">ReactDOMSelect</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">lastProps</span>);</div><div>        <span style="color: #9cdcfe">nextProps</span> = <span style="color: #9cdcfe">ReactDOMSelect</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">nextProps</span>);</div><div>        <span style="color: #c586c0">break</span>;</div><div>      <span style="color: #c586c0">case</span> <span style="color: #ce9178">'textarea'</span>:</div><div>        <span style="color: #9cdcfe">ReactDOMTextarea</span>.<span style="color: #dcdcaa">updateWrapper</span>(<span style="color: #569cd6">this</span>);</div><div>        <span style="color: #9cdcfe">lastProps</span> = <span style="color: #9cdcfe">ReactDOMTextarea</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">lastProps</span>);</div><div>        <span style="color: #9cdcfe">nextProps</span> = <span style="color: #9cdcfe">ReactDOMTextarea</span>.<span style="color: #dcdcaa">getNativeProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">nextProps</span>);</div><div>        <span style="color: #c586c0">break</span>;</div><div>    }</div><br /><div>    <span style="color: #dcdcaa">assertValidProps</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">nextProps</span>);</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #4ec9b0">_updateDOMProperties</span>(<span style="color: #9cdcfe">lastProps</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">transaction</span>);</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_updateDOMChildren</span>(<span style="color: #9cdcfe">lastProps</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>);</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_tag</span> === <span style="color: #ce9178">'select'</span>) {</div><div>      <span style="color: #6a9955">// &lt;select&gt; value update needs to occur after &lt;option&gt; children</span></div><div>      <span style="color: #6a9955">// reconciliation</span></div><div>      <span style="color: #9cdcfe">transaction</span>.<span style="color: #dcdcaa">getReactMountReady</span>().<span style="color: #dcdcaa">enqueue</span>(<span style="color: #dcdcaa">postUpdateSelectWrapper</span>, <span style="color: #569cd6">this</span>);</div><div>    }</div><div>  },</div><br /></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2362" y="2034" fill="#000000" font-family="Helvetica" font-size="12px">updateComponent: function (transaction, prevElement, nextElement, context) {...</text></switch></g><path d="M 2320 1970 L 2340 1970 L 2340 2030 L 2353.63 2030" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2358.88 2030 L 2351.88 2033.5 L 2353.63 2030 L 2351.88 2026.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1750" y="1890" width="570" height="160" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1970px; margin-left: 1752px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">receiveComponent</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevElement</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_currentElement</span> = <span style="color: #9cdcfe">nextElement</span>;</div><div>    <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">updateComponent</span>(<span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">prevElement</span>, <span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">context</span>);</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1752" y="1974" fill="#000000" font-family="Helvetica" font-size="12px">receiveComponent: function (nextElement, transaction, context) {...</text></switch></g><rect x="1240" y="1850" width="40" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1860px; margin-left: 1241px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">ReactCompositeComponent</div></div></div></foreignObject><text x="1260" y="1864" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">ReactC...</text></switch></g><rect x="1930" y="1830" width="40" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1840px; margin-left: 1931px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">ReactDOMComponent</div></div></div></foreignObject><text x="1950" y="1844" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">ReactD...</text></switch></g><path d="M 2060 2800 L 1955 2800 L 1955 3155 L 1856.37 3155" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1851.12 3155 L 1858.12 3151.5 L 1856.37 3155 L 1858.12 3158.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="2060" y="2470" width="750" height="660" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 2800px; margin-left: 2062px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">_updateDOMChildren</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">lastProps</span>, <span style="color: #9cdcfe">nextProps</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">lastContent</span> = <span style="color: #9cdcfe">CONTENT_TYPES</span>[<span style="color: #569cd6">typeof</span> <span style="color: #9cdcfe">lastProps</span>.<span style="color: #9cdcfe">children</span>] ? <span style="color: #9cdcfe">lastProps</span>.<span style="color: #9cdcfe">children</span> : <span style="color: #569cd6">null</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextContent</span> = <span style="color: #9cdcfe">CONTENT_TYPES</span>[<span style="color: #569cd6">typeof</span> <span style="color: #9cdcfe">nextProps</span>.<span style="color: #9cdcfe">children</span>] ? <span style="color: #9cdcfe">nextProps</span>.<span style="color: #9cdcfe">children</span> : <span style="color: #569cd6">null</span>;</div><br /><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">lastHtml</span> = <span style="color: #9cdcfe">lastProps</span>.<span style="color: #9cdcfe">dangerouslySetInnerHTML</span> &amp;&amp; <span style="color: #9cdcfe">lastProps</span>.<span style="color: #9cdcfe">dangerouslySetInnerHTML</span>.<span style="color: #9cdcfe">__html</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextHtml</span> = <span style="color: #9cdcfe">nextProps</span>.<span style="color: #9cdcfe">dangerouslySetInnerHTML</span> &amp;&amp; <span style="color: #9cdcfe">nextProps</span>.<span style="color: #9cdcfe">dangerouslySetInnerHTML</span>.<span style="color: #9cdcfe">__html</span>;</div><br /><div>    <span style="color: #6a9955">// Note the use of `!=` which checks for null or undefined.</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">lastChildren</span> = <span style="color: #9cdcfe">lastContent</span> != <span style="color: #569cd6">null</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">lastProps</span>.<span style="color: #9cdcfe">children</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextChildren</span> = <span style="color: #9cdcfe">nextContent</span> != <span style="color: #569cd6">null</span> ? <span style="color: #569cd6">null</span> : <span style="color: #9cdcfe">nextProps</span>.<span style="color: #9cdcfe">children</span>;</div><br /><div>    <span style="color: #6a9955">// If we're switching from children to content/html or vice versa, remove</span></div><div>    <span style="color: #6a9955">// the old content</span></div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">lastHasContentOrHtml</span> = <span style="color: #9cdcfe">lastContent</span> != <span style="color: #569cd6">null</span> || <span style="color: #9cdcfe">lastHtml</span> != <span style="color: #569cd6">null</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextHasContentOrHtml</span> = <span style="color: #9cdcfe">nextContent</span> != <span style="color: #569cd6">null</span> || <span style="color: #9cdcfe">nextHtml</span> != <span style="color: #569cd6">null</span>;</div><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">lastChildren</span> != <span style="color: #569cd6">null</span> &amp;&amp; <span style="color: #9cdcfe">nextChildren</span> == <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">updateChildren</span>(<span style="color: #569cd6">null</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>);</div><div>    } <span style="color: #c586c0">else</span> <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">lastHasContentOrHtml</span> &amp;&amp; !<span style="color: #9cdcfe">nextHasContentOrHtml</span>) {</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">updateTextContent</span>(<span style="color: #ce9178">''</span>);</div><div>    }</div><br /><div>    <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">nextContent</span> != <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">lastContent</span> !== <span style="color: #9cdcfe">nextContent</span>) {</div><div>        <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">updateTextContent</span>(<span style="color: #ce9178">''</span> + <span style="color: #9cdcfe">nextContent</span>);</div><div>      }</div><div>    } <span style="color: #c586c0">else</span> <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">nextHtml</span> != <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">lastHtml</span> !== <span style="color: #9cdcfe">nextHtml</span>) {</div><div>        <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">updateMarkup</span>(<span style="color: #ce9178">''</span> + <span style="color: #9cdcfe">nextHtml</span>);</div><div>      }</div><div>    } <span style="color: #c586c0">else</span> <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">nextChildren</span> != <span style="color: #569cd6">null</span>) {</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">updateChildren</span>(<span style="color: #9cdcfe">nextChildren</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>);</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2062" y="2804" fill="#000000" font-family="Helvetica" font-size="12px">_updateDOMChildren: function (lastProps, nextProps, transaction, context) {...</text></switch></g><path d="M 1850 3392.5 L 1940 3392.5 L 1940 3235 L 2023.63 3235" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2028.88 3235 L 2021.88 3238.5 L 2023.63 3235 L 2021.88 3231.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="1060" y="2680" width="790" height="950" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 3155px; margin-left: 1062px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #4ec9b0">_updateChildren</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">nextNestedChildrenElements</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevChildren</span> = <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedChildren</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">removedNodes</span> = {};</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextChildren</span> = <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_reconcilerUpdateChildren</span>(<span style="color: #9cdcfe">prevChildren</span>, </div><div><span style="color: #9cdcfe">        nextNestedChildrenElements</span>, <span style="color: #9cdcfe">removedNodes</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>);</div><div>      <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">nextChildren</span> &amp;&amp; !<span style="color: #9cdcfe">prevChildren</span>) {</div><div>        <span style="color: #c586c0">return</span>;</div><div>      }</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">updates</span> = <span style="color: #569cd6">null</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">name</span>;</div><div>      <span style="color: #6a9955">// `nextIndex` will increment for each child in `nextChildren`, but</span></div><div>      <span style="color: #6a9955">// `lastIndex` will be the last index visited in `prevChildren`.</span></div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">lastIndex</span> = <span style="color: #b5cea8">0</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextIndex</span> = <span style="color: #b5cea8">0</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">lastPlacedNode</span> = <span style="color: #569cd6">null</span>;</div><div>      <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">name</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">nextChildren</span>) {</div><div>        <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">nextChildren</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">name</span>)) {</div><div>          <span style="color: #c586c0">continue</span>;</div><div>        }</div><div>        <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevChild</span> = <span style="color: #9cdcfe">prevChildren</span> &amp;&amp; <span style="color: #9cdcfe">prevChildren</span>[<span style="color: #9cdcfe">name</span>];</div><div>        <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextChild</span> = <span style="color: #9cdcfe">nextChildren</span>[<span style="color: #9cdcfe">name</span>];</div><div>        <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">prevChild</span> === <span style="color: #9cdcfe">nextChild</span>) {</div><div>          <span style="color: #9cdcfe">updates</span> = <span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">updates</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">moveChild</span>(<span style="color: #9cdcfe">prevChild</span>, <span style="color: #9cdcfe">lastPlacedNode</span>, <span style="color: #9cdcfe">nextIndex</span>, <span style="color: #9cdcfe">lastIndex</span>));</div><div>          <span style="color: #9cdcfe">lastIndex</span> = <span style="color: #9cdcfe">Math</span>.<span style="color: #dcdcaa">max</span>(<span style="color: #9cdcfe">prevChild</span>.<span style="color: #9cdcfe">_mountIndex</span>, <span style="color: #9cdcfe">lastIndex</span>);</div><div>          <span style="color: #9cdcfe">prevChild</span>.<span style="color: #9cdcfe">_mountIndex</span> = <span style="color: #9cdcfe">nextIndex</span>;</div><div>        } <span style="color: #c586c0">else</span> {</div><div>          <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">prevChild</span>) {</div><div>            <span style="color: #6a9955">// Update `lastIndex` before `_mountIndex` gets unset by unmounting.</span></div><div>            <span style="color: #9cdcfe">lastIndex</span> = <span style="color: #9cdcfe">Math</span>.<span style="color: #dcdcaa">max</span>(<span style="color: #9cdcfe">prevChild</span>.<span style="color: #9cdcfe">_mountIndex</span>, <span style="color: #9cdcfe">lastIndex</span>);</div><div>            <span style="color: #6a9955">// The `removedNodes` loop below will actually remove the child.</span></div><div>          }</div><div>          <span style="color: #6a9955">// The child must be instantiated before it's mounted.</span></div><div>          <span style="color: #9cdcfe">updates</span> = <span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">updates</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_mountChildAtIndex</span>(<span style="color: #9cdcfe">nextChild</span>, <span style="color: #9cdcfe">lastPlacedNode</span>, </div><div><span style="color: #9cdcfe">            nextIndex</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>));</div><div>        }</div><div>        <span style="color: #9cdcfe">nextIndex</span>++;</div><div>        <span style="color: #9cdcfe">lastPlacedNode</span> = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">getNativeNode</span>(<span style="color: #9cdcfe">nextChild</span>);</div><div>      }</div><div>      <span style="color: #6a9955">// Remove children that are no longer present.</span></div><div>      <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">name</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">removedNodes</span>) {</div><div>        <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">removedNodes</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">name</span>)) {</div><div>          <span style="color: #9cdcfe">updates</span> = <span style="color: #dcdcaa">enqueue</span>(<span style="color: #9cdcfe">updates</span>, <span style="color: #569cd6">this</span>.<span style="color: #dcdcaa">_unmountChild</span>(<span style="color: #9cdcfe">prevChildren</span>[<span style="color: #9cdcfe">name</span>], <span style="color: #9cdcfe">removedNodes</span>[<span style="color: #9cdcfe">name</span>]));</div><div>        }</div><div>      }</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">updates</span>) {</div><div>        <span style="color: #dcdcaa">processQueue</span>(<span style="color: #569cd6">this</span>, <span style="color: #9cdcfe">updates</span>);</div><div>      }</div><div>      <span style="color: #569cd6">this</span>.<span style="color: #9cdcfe">_renderedChildren</span> = <span style="color: #9cdcfe">nextChildren</span>;</div><div>    },</div><br /></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="1062" y="3159" fill="#000000" font-family="Helvetica" font-size="12px">_updateChildren: function (nextNestedChildrenElements, transaction, context) {...</text></switch></g><path d="M 2490 3310 L 2490 3353.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2490 3358.88 L 2486.5 3351.88 L 2490 3353.63 L 2493.5 3351.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="2030" y="3160" width="920" height="150" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 3235px; margin-left: 2032px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">_reconcilerUpdateChildren</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">prevChildren</span>, <span style="color: #9cdcfe">nextNestedChildrenElements</span>, <span style="color: #9cdcfe">removedNodes</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextChildren</span>;</div><div>      <span style="color: #9cdcfe">nextChildren</span> = <span style="color: #dcdcaa">flattenChildren</span>(<span style="color: #9cdcfe">nextNestedChildrenElements</span>);</div><div>      <span style="color: #9cdcfe">ReactChildReconciler</span>.<span style="color: #dcdcaa">updateChildren</span>(<span style="color: #9cdcfe">prevChildren</span>, <span style="color: #9cdcfe">nextChildren</span>, <span style="color: #9cdcfe">removedNodes</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>);</div><div>      <span style="color: #c586c0">return</span> <span style="color: #9cdcfe">nextChildren</span>;</div><div>    },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2032" y="3239" fill="#000000" font-family="Helvetica" font-size="12px">_reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {...</text></switch></g><path d="M 2950 3750 L 3030 3750 L 3030 1644 L 1846.37 1644" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1841.12 1644 L 1848.12 1640.5 L 1846.37 1644 L 1848.12 1647.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="2030" y="3360" width="920" height="780" fill="#1f1f1f" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 3750px; margin-left: 2032px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: nowrap; "><div style="color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; font-size: 14px ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div style="font-family: &quot;consolas&quot; , &quot;courier new&quot; , monospace ; line-height: 19px"><div><span style="color: #dcdcaa">updateChildren</span><span style="color: #9cdcfe">:</span> <span style="color: #569cd6">function</span> (<span style="color: #9cdcfe">prevChildren</span>, <span style="color: #9cdcfe">nextChildren</span>, <span style="color: #9cdcfe">removedNodes</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>) {</div><div>    <span style="color: #6a9955">// We currently don't have a way to track moves here but if we use iterators</span></div><div>    <span style="color: #6a9955">// instead of for..in we can zip the iterators and check if an item has</span></div><div>    <span style="color: #6a9955">// moved.</span></div><div>    <span style="color: #6a9955">// TODO: If nothing has changed, return the prevChildren object so that we</span></div><div>    <span style="color: #6a9955">// can quickly bailout if nothing has changed.</span></div><div>    <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">nextChildren</span> &amp;&amp; !<span style="color: #9cdcfe">prevChildren</span>) {</div><div>      <span style="color: #c586c0">return</span>;</div><div>    }</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">name</span>;</div><div>    <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevChild</span>;</div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">name</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">nextChildren</span>) {</div><div>      <span style="color: #c586c0">if</span> (!<span style="color: #9cdcfe">nextChildren</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">name</span>)) {</div><div>        <span style="color: #c586c0">continue</span>;</div><div>      }</div><div>      <span style="color: #9cdcfe">prevChild</span> = <span style="color: #9cdcfe">prevChildren</span> &amp;&amp; <span style="color: #9cdcfe">prevChildren</span>[<span style="color: #9cdcfe">name</span>];</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">prevElement</span> = <span style="color: #9cdcfe">prevChild</span> &amp;&amp; <span style="color: #9cdcfe">prevChild</span>.<span style="color: #9cdcfe">_currentElement</span>;</div><div>      <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextElement</span> = <span style="color: #9cdcfe">nextChildren</span>[<span style="color: #9cdcfe">name</span>];</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">prevChild</span> != <span style="color: #569cd6">null</span> &amp;&amp; <span style="color: #dcdcaa">shouldUpdateReactComponent</span>(<span style="color: #9cdcfe">prevElement</span>, <span style="color: #9cdcfe">nextElement</span>)) {</div><div>        <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">receiveComponent</span>(<span style="color: #9cdcfe">prevChild</span>, <span style="color: #9cdcfe">nextElement</span>, <span style="color: #9cdcfe">transaction</span>, <span style="color: #9cdcfe">context</span>);</div><div>        <span style="color: #9cdcfe">nextChildren</span>[<span style="color: #9cdcfe">name</span>] = <span style="color: #9cdcfe">prevChild</span>;</div><div>      } <span style="color: #c586c0">else</span> {</div><div>        <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">prevChild</span>) {</div><div>          <span style="color: #9cdcfe">removedNodes</span>[<span style="color: #9cdcfe">name</span>] = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">getNativeNode</span>(<span style="color: #9cdcfe">prevChild</span>);</div><div>          <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">unmountComponent</span>(<span style="color: #9cdcfe">prevChild</span>, <span style="color: #569cd6">false</span>);</div><div>        }</div><div>        <span style="color: #6a9955">// The child must be instantiated before it's mounted.</span></div><div>        <span style="color: #569cd6">var</span> <span style="color: #9cdcfe">nextChildInstance</span> = <span style="color: #dcdcaa">instantiateReactComponent</span>(<span style="color: #9cdcfe">nextElement</span>);</div><div>        <span style="color: #9cdcfe">nextChildren</span>[<span style="color: #9cdcfe">name</span>] = <span style="color: #9cdcfe">nextChildInstance</span>;</div><div>      }</div><div>    }</div><div>    <span style="color: #6a9955">// Unmount children that are no longer present.</span></div><div>    <span style="color: #c586c0">for</span> (<span style="color: #9cdcfe">name</span> <span style="color: #569cd6">in</span> <span style="color: #9cdcfe">prevChildren</span>) {</div><div>      <span style="color: #c586c0">if</span> (<span style="color: #9cdcfe">prevChildren</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">name</span>) &amp;&amp; !(<span style="color: #9cdcfe">nextChildren</span> &amp;&amp; <span style="color: #9cdcfe">nextChildren</span>.<span style="color: #dcdcaa">hasOwnProperty</span>(<span style="color: #9cdcfe">name</span>))) {</div><div>        <span style="color: #9cdcfe">prevChild</span> = <span style="color: #9cdcfe">prevChildren</span>[<span style="color: #9cdcfe">name</span>];</div><div>        <span style="color: #9cdcfe">removedNodes</span>[<span style="color: #9cdcfe">name</span>] = <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">getNativeNode</span>(<span style="color: #9cdcfe">prevChild</span>);</div><div>        <span style="color: #9cdcfe">ReactReconciler</span>.<span style="color: #dcdcaa">unmountComponent</span>(<span style="color: #9cdcfe">prevChild</span>, <span style="color: #569cd6">false</span>);</div><div>      }</div><div>    }</div><div>  },</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="2032" y="3754" fill="#000000" font-family="Helvetica" font-size="12px">updateChildren: function (prevChildren, nextChildren, removedNodes, transaction, context) {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>