<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1281px" height="1021px" viewBox="-0.5 -0.5 1281 1021" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-03-30T10:11:51.736Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36&quot; etag=&quot;f9bUtruka-FUHkW7y_ns&quot; version=&quot;14.2.7&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;o5Q6EKL0kc_VLwyrc5Qx&quot; name=&quot;第 1 页&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" resource="https://app.diagrams.net/#Hgwtjs%2Fread-code%2Fmaster%2Freact16.10%2F%E5%9B%BE%E7%89%87%2F%E7%8A%B6%E6%80%81.svg"><defs/><g><path d="M 260 820 L 280 820 L 270 820 L 283.63 820" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 288.88 820 L 281.88 823.5 L 283.63 820 L 281.88 816.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="0" y="790" width="260" height="60" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 258px; height: 1px; padding-top: 820px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">div = document.getElementById('root')<br /><br />ReactDOM.render(App, div)<br /><span style="color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px">%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22div%20%3D%20document.getElementById('root')%22%20style%3D%22rounded%3D0%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22110%22%20y%3D%2260%22%20width%3D%22260%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E</span><span style="color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px">%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22div%20%3D%20document.getElementById('root')%22%20style%3D%22rounded%3D0%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22110%22%20y%3D%2260%22%20width%3D%22260%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E</span><span style="color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px">%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22div%20%3D%20document.getElementById('root')%22%20style%3D%22rounded%3D0%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22110%22%20y%3D%2260%22%20width%3D%22260%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E</span></div></div></div></foreignObject><text x="130" y="824" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">div = document.getElementById('root')...</text></switch></g><path d="M 627 760 L 598.5 760 L 598.5 785 L 576.37 785" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 571.12 785 L 578.12 781.5 L 576.37 785 L 578.12 788.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="627" y="720" width="260" height="80" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 258px; height: 1px; padding-top: 760px; margin-left: 628px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">this._internalRoot = <span>createRootImpl(</span><div>  container: div,</div><div>  tag: LegacyRoot,</div><div>  options: undefined,</div><div>)</div></div></div></div></foreignObject><text x="757" y="764" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">this._internalRoot = createRootImpl(...</text></switch></g><path d="M 430 890 L 430 950 L 356.37 950" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 351.12 950 L 358.12 946.5 L 356.37 950 L 358.12 953.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="290" y="750" width="280" height="140" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 278px; height: 1px; padding-top: 820px; margin-left: 291px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">root = div._reactRootContainer = new ReactSyncRoot(div, LegacyRoot:0)<br /><br />fiberRoot = root.._internalRoot<br /><br /><div>unbatchedUpdates(() =&gt; {</div><div>      updateContainer(ReactNode:App, fiberRoot, parentComponent:root.current, callback);</div><div>    });</div></div></div></div></foreignObject><text x="430" y="824" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">root = div._reactRootContainer = new ReactSync...</text></switch></g><path d="M 940 565 L 920 565 L 920 487.5 L 913.37 487.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 908.12 487.5 L 915.12 484 L 913.37 487.5 L 915.12 491 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="940" y="350" width="340" height="430" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 338px; height: 1px; padding-top: 565px; margin-left: 942px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>{</div><div>  this.tag = tag;</div><div>  this.current = null;</div><div>  this.containerInfo = containerInfo;</div><div>  this.pendingChildren = null;</div><div>  this.pingCache = null;</div><div>  this.finishedExpirationTime = NoWork;</div><div>  this.finishedWork = null;</div><div>  this.timeoutHandle = noTimeout;</div><div>  this.context = null;</div><div>  this.pendingContext = null;</div><div>  this.hydrate = hydrate;</div><div>  this.firstBatch = null;</div><div>  this.callbackNode = null;</div><div>  this.callbackPriority = NoPriority;</div><div>  this.firstPendingTime = NoWork;</div><div>  this.firstSuspendedTime = NoWork;</div><div>  this.lastSuspendedTime = NoWork;</div><div>  this.nextKnownPendingLevel = NoWork;</div><div>  this.lastPingedTime = NoWork;</div><div>  this.lastExpiredTime = NoWork;</div><div><br /></div><div>  if (enableSchedulerTracing) {</div><div>    this.interactionThreadID = unstable_getThreadID();</div><div>    this.memoizedInteractions = new Set();</div><div>    this.pendingInteractionMap = new Map();</div><div>  }</div><div>  if (enableSuspenseCallback) {</div><div>    this.hydrationCallbacks = null;</div><div>  }</div><div>}</div></div></div></div></foreignObject><text x="942" y="569" fill="#000000" font-family="Helvetica" font-size="12px">{...</text></switch></g><path d="M 220 920 L 220 885 L 130 885 L 130 856.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 130 851.12 L 133.5 858.12 L 130 856.37 L 126.5 858.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="90" y="920" width="260" height="60" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 258px; height: 1px; padding-top: 950px; margin-left: 91px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">return getPublicRootInstance(fiberRoot)</div></div></div></foreignObject><text x="220" y="954" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">return getPublicRootInstance(fiberRoot)</text></switch></g><path d="M 670 860 L 620 860 L 620 855 L 576.37 855" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 571.12 855 L 578.12 851.5 L 576.37 855 L 578.12 858.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 820 900 L 820 933.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 820 938.88 L 816.5 931.88 L 820 933.63 L 823.5 931.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="670" y="820" width="300" height="80" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 298px; height: 1px; padding-top: 860px; margin-left: 671px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>executionContext &amp;= ~BatchedContext:1;</div><div>  executionContext |= LegacyUnbatchedContext:8;<br /><br /> updateContainer(ReactNode:App, fiberRoot, parentComponent:root.current, callback);<br /></div></div></div></div></foreignObject><text x="820" y="864" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">executionContext &amp;= ~BatchedContext:1;...</text></switch></g><rect x="670" y="940" width="300" height="80" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 298px; height: 1px; padding-top: 980px; margin-left: 671px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>executionContext &amp;= ~BatchedContext:1;</div><div>  executionContext |= LegacyUnbatchedContext:8;<br /><br /> updateContainer(ReactNode:App, fiberRoot, parentComponent:null, callback);<br /></div></div></div></div></foreignObject><text x="820" y="984" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">executionContext &amp;= ~BatchedContext:1;...</text></switch></g><path d="M 757 690 L 757 710 L 757 700 L 757 713.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 757 718.88 L 753.5 711.88 L 757 713.63 L 760.5 711.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="614" y="610" width="286" height="80" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 284px; height: 1px; padding-top: 650px; margin-left: 616px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "> root = createContainer(container, tag, hydrate:false, hydrationCallbacks:null)<br /><br />div.__reactContainere$randomKey = root.current<br /><br />return root</div></div></div></foreignObject><text x="616" y="654" fill="#000000" font-family="Helvetica" font-size="12px">root = createContainer(container, tag, hydrate...</text></switch></g><path d="M 733.5 570 L 733.5 590 L 757 590 L 757 603.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 757 608.88 L 753.5 601.88 L 757 603.63 L 760.5 601.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="560" y="460" width="347" height="110" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 345px; height: 1px; padding-top: 515px; margin-left: 562px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "> root = new FiberRootNode(div, LegacyRoot,hydrate:false)<br /><br /><div>const uninitializedFiber = createHostRootFiber(LegacyRoot);</div><div>  root.current = uninitializedFiber;</div><div>  uninitializedFiber.stateNode = root;</div><br />return root</div></div></div></foreignObject><text x="562" y="519" fill="#000000" font-family="Helvetica" font-size="12px">root = new FiberRootNode(div, LegacyRoot,hydrate:false)...</text></switch></g><path d="M 517 630 L 538.5 630 L 538.5 515 L 553.63 515" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 558.88 515 L 551.88 518.5 L 553.63 515 L 551.88 511.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="170" y="560" width="347" height="140" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 345px; height: 1px; padding-top: 630px; margin-left: 172px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>let mode;</div><div>  if (tag === ConcurrentRoot) {</div><div>    mode = ConcurrentMode | BatchedMode | StrictMode;</div><div>  } else if (tag === BatchedRoot) {</div><div>    mode = BatchedMode | StrictMode;</div><div>  } else {</div><div>    mode = NoMode;</div><div>  }</div><div>  return new FiberNode(tag:HostRoot, pendingProps:null, key:null, mode)</div></div></div></div></foreignObject><text x="172" y="634" fill="#000000" font-family="Helvetica" font-size="12px">let mode;...</text></switch></g><path d="M 343.5 520 L 343.5 553.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 343.5 558.88 L 340 551.88 L 343.5 553.63 L 347 551.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="170" y="0" width="347" height="520" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 345px; height: 1px; padding-top: 260px; margin-left: 172px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>{</div><div>  // Instance</div><div>  this.tag = tag;</div><div>  this.key = key;</div><div>  this.elementType = null;</div><div>  this.type = null;</div><div>  this.stateNode = null;</div><div><br /></div><div>  // Fiber</div><div>  this.return = null;</div><div>  this.child = null;</div><div>  this.sibling = null;</div><div>  this.index = 0;</div><div><br /></div><div>  this.ref = null;</div><div><br /></div><div>  this.pendingProps = pendingProps;</div><div>  this.memoizedProps = null;</div><div>  this.updateQueue = null;</div><div>  this.memoizedState = null;</div><div>  this.dependencies = null;</div><div><br /></div><div>  this.mode = mode;</div><div><br /></div><div>  // Effects</div><div>  this.effectTag = NoEffect;</div><div>  this.nextEffect = null;</div><div><br /></div><div>  this.firstEffect = null;</div><div>  this.lastEffect = null;</div><div><br /></div><div>  this.expirationTime = NoWork;</div><div>  this.childExpirationTime = NoWork;</div><div><br /></div><div>  this.alternate = null;<br />}</div></div></div></div></foreignObject><text x="172" y="264" fill="#000000" font-family="Helvetica" font-size="12px">{...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>